   1               		.file	"RNDISClassDevice.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	RNDIS_Device_ProcessControlRequest
  13               	RNDIS_Device_ProcessControlRequest:
  14               	.LFB100:
  15               		.file 1 "lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c"
   1:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
   2:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****      Copyright (C) Dean Camera, 2017.
   4:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   5:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
   8:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   9:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
  10:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Copyright 2017  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  12:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  21:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
  30:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  31:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "../../Core/USBMode.h"
  33:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  34:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #if defined(USB_CAN_BE_DEVICE)
  35:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  36:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DEVICE_C
  38:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "RNDISClassDevice.h"
  39:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  40:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  41:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  42:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_SUPPORTED_LIST),
  43:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_PHYSICAL_MEDIUM),
  44:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_HARDWARE_STATUS),
  45:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_SUPPORTED),
  46:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_IN_USE),
  47:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_FRAME_SIZE),
  48:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  49:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_LINK_SPEED),
  50:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_TRANSMIT_BLOCK_SIZE),
  51:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RECEIVE_BLOCK_SIZE),
  52:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_ID),
  53:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_DESCRIPTION),
  54:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_CURRENT_PACKET_FILTER),
  55:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  56:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_CONNECT_STATUS),
  57:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_OK),
  58:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_OK),
  59:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_ERROR),
  60:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_ERROR),
  61:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_NO_BUFFER),
  62:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_PERMANENT_ADDRESS),
  63:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_CURRENT_ADDRESS),
  64:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MULTICAST_LIST),
  65:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MAXIMUM_LIST_SIZE),
  66:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_RCV_ERROR_ALIGNMENT),
  67:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_ONE_COLLISION),
  68:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_MORE_COLLISIONS),
  69:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	};
  70:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  71:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  72:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
  16               		.loc 1 72 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 CF92      		push r12
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 12, -2
  23 0002 DF92      		push r13
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 13, -3
  27 0004 EF92      		push r14
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 14, -4
  31 0006 FF92      		push r15
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 15, -5
  35 0008 0F93      		push r16
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 16, -6
  39 000a 1F93      		push r17
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 17, -7
  43 000c CF93      		push r28
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 28, -8
  47 000e DF93      		push r29
  48               	.LCFI7:
  49               		.cfi_def_cfa_offset 10
  50               		.cfi_offset 29, -9
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 8 */
  54               	.L__stack_usage = 8
  55               	.LBB54:
  56               	.LBB55:
  57               		.file 2 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2017.
   4:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2017  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  58               		.loc 2 431 0
  59 0010 2091 E800 		lds r18,232
  60               	.LBE55:
  61               	.LBE54:
  73:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  62               		.loc 1 73 0
  63 0014 23FF      		sbrs r18,3
  64 0016 00C0      		rjmp .L1
  74:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  75:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  76:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  65               		.loc 1 76 0
  66 0018 DC01      		movw r26,r24
  67 001a 2C91      		ld r18,X
  68 001c 30E0      		ldi r19,0
  69 001e 4091 0000 		lds r20,USB_ControlRequest+4
  70 0022 5091 0000 		lds r21,USB_ControlRequest+4+1
  71 0026 4217      		cp r20,r18
  72 0028 5307      		cpc r21,r19
  73 002a 01F0      		breq .+2
  74 002c 00C0      		rjmp .L1
  75 002e 8C01      		movw r16,r24
  77:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  78:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  79:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
  76               		.loc 1 79 0
  77 0030 8091 0000 		lds r24,USB_ControlRequest+1
  78               	.LVL1:
  79 0034 8823      		tst r24
  80 0036 01F0      		breq .L3
  81 0038 8130      		cpi r24,lo8(1)
  82 003a 01F4      		brne .+2
  83 003c 00C0      		rjmp .L4
  84 003e 00C0      		rjmp .L1
  85               	.L3:
  80:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  81:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
  82:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  86               		.loc 1 82 0
  87 0040 8091 0000 		lds r24,USB_ControlRequest
  88 0044 8132      		cpi r24,lo8(33)
  89 0046 01F0      		breq .+2
  90 0048 00C0      		rjmp .L1
  91               	.LBB56:
  92               	.LBB57:
 432:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
  93               		.loc 2 444 0
  94 004a 8091 E800 		lds r24,232
  95 004e 877F      		andi r24,lo8(-9)
  96 0050 8093 E800 		sts 232,r24
  97               	.LBE57:
  98               	.LBE56:
  83:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  84:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
  85:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->Config.MessageBuffer, USB_ControlRequest.wL
  99               		.loc 1 85 0
 100 0054 6091 0000 		lds r22,USB_ControlRequest+6
 101 0058 7091 0000 		lds r23,USB_ControlRequest+6+1
 102 005c FD01      		movw r30,r26
 103 005e 808D      		ldd r24,Z+24
 104 0060 918D      		ldd r25,Z+25
 105 0062 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 106               	.LVL2:
 107               	.LBB58:
 108               	.LBB59:
 445:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 109               		.loc 2 456 0
 110 0066 8091 E800 		lds r24,232
 111 006a 8E77      		andi r24,lo8(126)
 112 006c 8093 E800 		sts 232,r24
 113               	.LVL3:
 114               	.LBE59:
 115               	.LBE58:
 116               	.LBB60:
 117               	.LBB61:
  86:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearIN();
  87:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  88:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  89:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
  90:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  91:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
  92:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
  93:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  94:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  95:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)RNDISInterfaceInfo->Config.Mes
  96:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  97:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				if (!(MessageHeader->MessageLength))
  98:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				{
  99:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					RNDISInterfaceInfo->Config.MessageBuffer[0] = 0;
 100:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                = CPU_TO_LE32(1);
 101:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				}
 102:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 103:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
 104:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->Config.MessageBuffer, le32_to_cpu(MessageH
 105:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearOUT();
 106:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 107:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 108:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 109:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 110:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 111:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 112:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 113:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 114:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 115:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 116:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 117:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 118:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISInterfaceInfo->Config.DataINEndpoint.Type       = EP_TYPE_BULK;
 119:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISInterfaceInfo->Config.DataOUTEndpoint.Type      = EP_TYPE_BULK;
 120:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISInterfaceInfo->Config.NotificationEndpoint.Type = EP_TYPE_INTERRUPT;
 121:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 122:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (RNDISInterfaceInfo->Config.MessageBuffer == NULL)
 123:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 124:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 125:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (RNDISInterfaceInfo->Config.MessageBufferLength < RNDIS_DEVICE_MIN_MESSAGE_BUFFER_LENGTH)
 126:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 127:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 128:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_ConfigureEndpointTable(&RNDISInterfaceInfo->Config.DataINEndpoint, 1)))
 129:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 130:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 131:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_ConfigureEndpointTable(&RNDISInterfaceInfo->Config.DataOUTEndpoint, 1)))
 132:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 133:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 134:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_ConfigureEndpointTable(&RNDISInterfaceInfo->Config.NotificationEndpoint, 1)))
 135:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 136:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 137:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return true;
 138:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 139:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 140:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 141:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 142:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 143:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
 144:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 145:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpoint.Address);
 146:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 147:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 148:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 149:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 150:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 151:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 152:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
 153:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wValue        = CPU_TO_LE16(0),
 154:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wIndex        = CPU_TO_LE16(0),
 155:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wLength       = CPU_TO_LE16(0),
 156:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			};
 157:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 158:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 159:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 160:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_ClearIN();
 161:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 162:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 163:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 164:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 165:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 166:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 167:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 168:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 169:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 170:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 171:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)RNDISInterfaceInfo->Config.Messag
 118               		.loc 1 171 0
 119 0070 D801      		movw r26,r16
 120 0072 5896      		adiw r26,24
 121 0074 CD91      		ld r28,X+
 122 0076 DC91      		ld r29,X
 123 0078 5997      		sbiw r26,24+1
 124               	.LVL4:
 172:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 173:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (le32_to_cpu(MessageHeader->MessageType))
 125               		.loc 1 173 0
 126 007a 8881      		ld r24,Y
 127 007c 9981      		ldd r25,Y+1
 128 007e AA81      		ldd r26,Y+2
 129 0080 BB81      		ldd r27,Y+3
 130 0082 8430      		cpi r24,4
 131 0084 9105      		cpc r25,__zero_reg__
 132 0086 A105      		cpc r26,__zero_reg__
 133 0088 B105      		cpc r27,__zero_reg__
 134 008a 01F4      		brne .+2
 135 008c 00C0      		rjmp .L5
 136 008e 00F4      		brsh .L6
 137 0090 8230      		cpi r24,2
 138 0092 9105      		cpc r25,__zero_reg__
 139 0094 A105      		cpc r26,__zero_reg__
 140 0096 B105      		cpc r27,__zero_reg__
 141 0098 01F0      		breq .L7
 142 009a 0397      		sbiw r24,3
 143 009c A105      		cpc r26,__zero_reg__
 144 009e B105      		cpc r27,__zero_reg__
 145 00a0 01F0      		breq .+2
 146 00a2 00C0      		rjmp .L1
 147               	.LBB62:
 174:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 175:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 176:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 177:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 178:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 179:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Message_t*)RNDISInterfaceInfo->Config.MessageBuffer;
 180:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 181:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Complete_t*)RNDISInterfaceInfo->Config.MessageBuffer;
 182:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 183:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageType            = CPU_TO_LE32(REMOTE_NDIS_INITIALIZE_CMPLT);
 184:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 185:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 186:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Status                 = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 187:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 188:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MajorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MAJOR);
 189:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 190:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 191:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 192:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 193:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 194:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 195:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 196:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 197:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 198:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Initialized;
 199:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 200:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_HALT_MSG:
 201:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = false;
 148               		.loc 1 201 0
 149 00a4 D801      		movw r26,r16
 150 00a6 5C96      		adiw r26,28
 151 00a8 1C92      		st X,__zero_reg__
 152 00aa 5C97      		sbiw r26,28
 202:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 203:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			MessageHeader->MessageLength                = CPU_TO_LE32(0);
 153               		.loc 1 203 0
 154 00ac 1C82      		std Y+4,__zero_reg__
 155 00ae 1D82      		std Y+5,__zero_reg__
 156 00b0 1E82      		std Y+6,__zero_reg__
 157 00b2 1F82      		std Y+7,__zero_reg__
 204:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 205:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Uninitialized;
 158               		.loc 1 205 0
 159 00b4 5D96      		adiw r26,29
 160 00b6 1C92      		st X,__zero_reg__
 161 00b8 00C0      		rjmp .L1
 162               	.L6:
 163               	.LBE62:
 173:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 164               		.loc 1 173 0
 165 00ba 8630      		cpi r24,6
 166 00bc 9105      		cpc r25,__zero_reg__
 167 00be A105      		cpc r26,__zero_reg__
 168 00c0 B105      		cpc r27,__zero_reg__
 169 00c2 01F4      		brne .+2
 170 00c4 00C0      		rjmp .L9
 171 00c6 00F4      		brsh .+2
 172 00c8 00C0      		rjmp .L10
 173 00ca 0897      		sbiw r24,8
 174 00cc A105      		cpc r26,__zero_reg__
 175 00ce B105      		cpc r27,__zero_reg__
 176 00d0 01F0      		breq .+2
 177 00d2 00C0      		rjmp .L1
 178               	.LBB69:
 206:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 207:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_QUERY_MSG:
 208:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 209:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 210:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Message_t*  QUERY_Message       = (RNDIS_Query_Message_t*)RNDISInterfaceInfo->Config
 211:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Complete_t* QUERY_Response      = (RNDIS_Query_Complete_t*)RNDISInterfaceInfo->Confi
 212:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t                Query_Oid           = CPU_TO_LE32(QUERY_Message->Oid);
 213:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 214:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    QueryData    = &RNDISInterfaceInfo->Config.MessageBuffer[sizeof(RNDIS_Message_Header_t)
 215:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                                  le32_to_cpu(QUERY_Message->Inf
 216:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    ResponseData = &RNDISInterfaceInfo->Config.MessageBuffer[sizeof(RNDIS_Query_Complete_t)
 217:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint16_t ResponseSize;
 218:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 219:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			QUERY_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_QUERY_CMPLT);
 220:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 221:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, le32_to_cpu(QUERY_Me
 222:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                  ResponseData, &ResponseSize))
 223:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 225:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 226:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 227:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 228:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 229:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 230:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			else
 231:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 232:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 233:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 234:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 235:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 236:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 237:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 238:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 239:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 240:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_SET_MSG:
 241:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 242:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 243:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Message_t*  SET_Message           = (RNDIS_Set_Message_t*)RNDISInterfaceInfo->Config.M
 244:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Complete_t* SET_Response          = (RNDIS_Set_Complete_t*)RNDISInterfaceInfo->Config.
 245:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 246:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 247:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 248:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 249:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 250:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 251:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void* SetData = &RNDISInterfaceInfo->Config.MessageBuffer[sizeof(RNDIS_Message_Header_t) +
 252:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 253:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 254:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 255:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 256:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 257:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 258:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_RESET_MSG:
 259:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 260:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 261:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Reset_Complete_t* RESET_Response      = (RNDIS_Reset_Complete_t*)RNDISInterfaceInfo->Confi
 262:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 263:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 264:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 265:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 266:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 267:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 268:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 269:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 179               		.loc 1 270 0
 180 00d4 81E0      		ldi r24,lo8(1)
 181 00d6 D801      		movw r26,r16
 182 00d8 5C96      		adiw r26,28
 183 00da 8C93      		st X,r24
 184               	.LVL5:
 271:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 272:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 273:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Message_t*)RNDISInterfaceInfo->Config.MessageBuffer;
 274:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 275:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Complete_t*)RNDISInterfaceInfo->Config.MessageBuffer;
 276:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 277:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 185               		.loc 1 277 0
 186 00dc 88E0      		ldi r24,lo8(8)
 187 00de 90E0      		ldi r25,0
 188 00e0 A0E0      		ldi r26,0
 189 00e2 B0E8      		ldi r27,lo8(-128)
 190 00e4 8883      		st Y,r24
 191 00e6 9983      		std Y+1,r25
 192 00e8 AA83      		std Y+2,r26
 193 00ea BB83      		std Y+3,r27
 278:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 194               		.loc 1 278 0
 195 00ec 80E1      		ldi r24,lo8(16)
 196 00ee 90E0      		ldi r25,0
 197 00f0 A0E0      		ldi r26,0
 198 00f2 B0E0      		ldi r27,0
 199 00f4 8C83      		std Y+4,r24
 200 00f6 9D83      		std Y+5,r25
 201 00f8 AE83      		std Y+6,r26
 202 00fa BF83      		std Y+7,r27
 203 00fc 00C0      		rjmp .L55
 204               	.LVL6:
 205               	.L7:
 176:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 206               		.loc 1 176 0
 207 00fe 21E0      		ldi r18,lo8(1)
 208 0100 F801      		movw r30,r16
 209 0102 248F      		std Z+28,r18
 210               	.LVL7:
 183:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 211               		.loc 1 183 0
 212 0104 82E0      		ldi r24,lo8(2)
 213 0106 90E0      		ldi r25,0
 214 0108 A0E0      		ldi r26,0
 215 010a B0E8      		ldi r27,lo8(-128)
 216 010c 8883      		st Y,r24
 217 010e 9983      		std Y+1,r25
 218 0110 AA83      		std Y+2,r26
 219 0112 BB83      		std Y+3,r27
 184:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 220               		.loc 1 184 0
 221 0114 84E3      		ldi r24,lo8(52)
 222 0116 90E0      		ldi r25,0
 223 0118 A0E0      		ldi r26,0
 224 011a B0E0      		ldi r27,0
 225 011c 8C83      		std Y+4,r24
 226 011e 9D83      		std Y+5,r25
 227 0120 AE83      		std Y+6,r26
 228 0122 BF83      		std Y+7,r27
 186:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 229               		.loc 1 186 0
 230 0124 1C86      		std Y+12,__zero_reg__
 231 0126 1D86      		std Y+13,__zero_reg__
 232 0128 1E86      		std Y+14,__zero_reg__
 233 012a 1F86      		std Y+15,__zero_reg__
 188:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 234               		.loc 1 188 0
 235 012c 81E0      		ldi r24,lo8(1)
 236 012e 90E0      		ldi r25,0
 237 0130 A0E0      		ldi r26,0
 238 0132 B0E0      		ldi r27,0
 239 0134 888B      		std Y+16,r24
 240 0136 998B      		std Y+17,r25
 241 0138 AA8B      		std Y+18,r26
 242 013a BB8B      		std Y+19,r27
 189:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 243               		.loc 1 189 0
 244 013c 1C8A      		std Y+20,__zero_reg__
 245 013e 1D8A      		std Y+21,__zero_reg__
 246 0140 1E8A      		std Y+22,__zero_reg__
 247 0142 1F8A      		std Y+23,__zero_reg__
 190:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 248               		.loc 1 190 0
 249 0144 888F      		std Y+24,r24
 250 0146 998F      		std Y+25,r25
 251 0148 AA8F      		std Y+26,r26
 252 014a BB8F      		std Y+27,r27
 191:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 253               		.loc 1 191 0
 254 014c 1C8E      		std Y+28,__zero_reg__
 255 014e 1D8E      		std Y+29,__zero_reg__
 256 0150 1E8E      		std Y+30,__zero_reg__
 257 0152 1F8E      		std Y+31,__zero_reg__
 192:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 258               		.loc 1 192 0
 259 0154 88A3      		std Y+32,r24
 260 0156 99A3      		std Y+33,r25
 261 0158 AAA3      		std Y+34,r26
 262 015a BBA3      		std Y+35,r27
 193:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 263               		.loc 1 193 0
 264 015c 88E0      		ldi r24,lo8(8)
 265 015e 96E0      		ldi r25,lo8(6)
 266 0160 A0E0      		ldi r26,0
 267 0162 B0E0      		ldi r27,0
 268 0164 8CA3      		std Y+36,r24
 269 0166 9DA3      		std Y+37,r25
 270 0168 AEA3      		std Y+38,r26
 271 016a BFA3      		std Y+39,r27
 194:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 272               		.loc 1 194 0
 273 016c 18A6      		std Y+40,__zero_reg__
 274 016e 19A6      		std Y+41,__zero_reg__
 275 0170 1AA6      		std Y+42,__zero_reg__
 276 0172 1BA6      		std Y+43,__zero_reg__
 195:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 277               		.loc 1 195 0
 278 0174 1CA6      		std Y+44,__zero_reg__
 279 0176 1DA6      		std Y+45,__zero_reg__
 280 0178 1EA6      		std Y+46,__zero_reg__
 281 017a 1FA6      		std Y+47,__zero_reg__
 196:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 282               		.loc 1 196 0
 283 017c 18AA      		std Y+48,__zero_reg__
 284 017e 19AA      		std Y+49,__zero_reg__
 285 0180 1AAA      		std Y+50,__zero_reg__
 286 0182 1BAA      		std Y+51,__zero_reg__
 198:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 287               		.loc 1 198 0
 288 0184 258F      		std Z+29,r18
 289 0186 00C0      		rjmp .L1
 290               	.LVL8:
 291               	.L5:
 208:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 292               		.loc 1 208 0
 293 0188 81E0      		ldi r24,lo8(1)
 294 018a F801      		movw r30,r16
 295 018c 848F      		std Z+28,r24
 296               	.LVL9:
 212:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 297               		.loc 1 212 0
 298 018e 4C85      		ldd r20,Y+12
 299 0190 5D85      		ldd r21,Y+13
 300 0192 6E85      		ldd r22,Y+14
 301 0194 7F85      		ldd r23,Y+15
 302               	.LVL10:
 216:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint16_t ResponseSize;
 303               		.loc 1 216 0
 304 0196 CE01      		movw r24,r28
 305 0198 4896      		adiw r24,24
 306               	.LVL11:
 219:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 307               		.loc 1 219 0
 308 019a 24E0      		ldi r18,lo8(4)
 309 019c C22E      		mov r12,r18
 310 019e D12C      		mov r13,__zero_reg__
 311 01a0 E12C      		mov r14,__zero_reg__
 312 01a2 20E8      		ldi r18,lo8(-128)
 313 01a4 F22E      		mov r15,r18
 314 01a6 C882      		st Y,r12
 315 01a8 D982      		std Y+1,r13
 316 01aa EA82      		std Y+2,r14
 317 01ac FB82      		std Y+3,r15
 318               	.LVL12:
 319               	.LBB63:
 320               	.LBB64:
 279:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->RequestId               = KEEPALIVE_Message->RequestId;
 280:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 281:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 282:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 283:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 284:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 285:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 286:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 287:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint32_t OId,
 288:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* const QueryData,
 289:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint16_t QuerySize,
 290:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* ResponseData,
 291:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           uint16_t* const ResponseSize)
 292:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 293:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QueryData;
 294:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QuerySize;
 295:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 321               		.loc 1 296 0
 322 01ae 4E30      		cpi r20,14
 323 01b0 F1E0      		ldi r31,1
 324 01b2 5F07      		cpc r21,r31
 325 01b4 6F07      		cpc r22,r31
 326 01b6 7105      		cpc r23,__zero_reg__
 327 01b8 01F4      		brne .+2
 328 01ba 00C0      		rjmp .L13
 329               	.LVL13:
 330 01bc 00F0      		brlo .+2
 331 01be 00C0      		rjmp .L14
 332 01c0 4630      		cpi r20,6
 333 01c2 A1E0      		ldi r26,1
 334 01c4 5A07      		cpc r21,r26
 335 01c6 6A07      		cpc r22,r26
 336 01c8 7105      		cpc r23,__zero_reg__
 337 01ca 01F4      		brne .+2
 338 01cc 00C0      		rjmp .L15
 339 01ce 00F4      		brsh .L16
 340 01d0 4230      		cpi r20,2
 341 01d2 E1E0      		ldi r30,1
 342 01d4 5E07      		cpc r21,r30
 343 01d6 6E07      		cpc r22,r30
 344 01d8 7105      		cpc r23,__zero_reg__
 345 01da 01F4      		brne .+2
 346 01dc 00C0      		rjmp .L26
 347 01de 00F4      		brsh .L18
 348 01e0 4130      		cpi r20,1
 349 01e2 5140      		sbci r21,1
 350 01e4 6140      		sbci r22,1
 351 01e6 7105      		cpc r23,__zero_reg__
 352 01e8 01F0      		breq .+2
 353 01ea 00C0      		rjmp .L12
 354               	.LVL14:
 297:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 298:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_SUPPORTED_LIST:
 299:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 300:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 301:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 355               		.loc 1 301 0
 356 01ec 4CE6      		ldi r20,lo8(108)
 357 01ee 50E0      		ldi r21,0
 358               	.LVL15:
 359 01f0 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 360 01f2 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 361 01f4 0E94 0000 		call memcpy_P
 362               	.LVL16:
 299:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 363               		.loc 1 299 0
 364 01f8 0CE6      		ldi r16,lo8(108)
 365 01fa 10E0      		ldi r17,0
 366               	.LVL17:
 367 01fc 00C0      		rjmp .L33
 368               	.LVL18:
 369               	.L18:
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 370               		.loc 1 296 0
 371 01fe 4530      		cpi r20,5
 372 0200 5140      		sbci r21,1
 373 0202 6140      		sbci r22,1
 374 0204 7105      		cpc r23,__zero_reg__
 375               	.LVL19:
 376 0206 00F4      		brsh .+2
 377 0208 00C0      		rjmp .L26
 378 020a 00C0      		rjmp .L12
 379               	.LVL20:
 380               	.L16:
 381 020c 4C30      		cpi r20,12
 382 020e A1E0      		ldi r26,1
 383 0210 5A07      		cpc r21,r26
 384 0212 6A07      		cpc r22,r26
 385 0214 7105      		cpc r23,__zero_reg__
 386 0216 00F4      		brsh .L21
 387 0218 4A30      		cpi r20,10
 388 021a B1E0      		ldi r27,1
 389 021c 5B07      		cpc r21,r27
 390 021e 6B07      		cpc r22,r27
 391 0220 7105      		cpc r23,__zero_reg__
 392 0222 00F0      		brlo .+2
 393 0224 00C0      		rjmp .L15
 394 0226 4730      		cpi r20,7
 395 0228 5140      		sbci r21,1
 396 022a 6140      		sbci r22,1
 397 022c 7105      		cpc r23,__zero_reg__
 398 022e 01F0      		breq .+2
 399 0230 00C0      		rjmp .L12
 400               	.LVL21:
 302:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 303:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 304:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 305:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 306:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 307:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate that the device is a true ethernet link */
 308:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 309:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 310:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 311:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_HARDWARE_STATUS:
 312:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 313:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 314:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(NDIS_HardwareStatus_Ready);
 315:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 316:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 317:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 318:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_IN_USE:
 319:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 320:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 321:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 322:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 323:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 324:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_ID:
 325:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 326:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 327:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 328:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0x00FFFFFF);
 329:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 330:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 331:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 332:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 333:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 334:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 335:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 336:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(ETHERNET_FRAME_SIZE_MAX);
 337:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 338:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 339:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 340:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 341:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 342:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 343:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 344:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 345:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 346:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 347:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 348:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIA_STATE_CONNECTED);
 349:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 350:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 351:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_LINK_SPEED:
 352:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 353:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 354:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate 10Mb/s link speed */
 355:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(100000);
 401               		.loc 1 355 0
 402 0232 80EA      		ldi r24,lo8(-96)
 403 0234 96E8      		ldi r25,lo8(-122)
 404 0236 A1E0      		ldi r26,lo8(1)
 405 0238 B0E0      		ldi r27,0
 406               	.LVL22:
 407 023a 00C0      		rjmp .L54
 408               	.LVL23:
 409               	.L21:
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 410               		.loc 1 296 0
 411 023c 4C30      		cpi r20,12
 412 023e F1E0      		ldi r31,1
 413 0240 5F07      		cpc r21,r31
 414 0242 6F07      		cpc r22,r31
 415 0244 7105      		cpc r23,__zero_reg__
 416 0246 01F4      		brne .+2
 417 0248 00C0      		rjmp .L23
 418 024a 4D30      		cpi r20,13
 419 024c 5140      		sbci r21,1
 420 024e 6140      		sbci r22,1
 421 0250 7105      		cpc r23,__zero_reg__
 422 0252 01F0      		breq .+2
 423 0254 00C0      		rjmp .L12
 340:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 424               		.loc 1 340 0
 425 0256 F801      		movw r30,r16
 426 0258 6089      		ldd r22,Z+16
 427 025a 7189      		ldd r23,Z+17
 428 025c FB01      		movw r30,r22
 429               		0:
 430 025e 0190      		ld __tmp_reg__,Z+
 431 0260 0020      		tst __tmp_reg__
 432 0262 01F4      		brne 0b
 433 0264 8F01      		movw r16,r30
 434               	.LVL24:
 435 0266 061B      		sub r16,r22
 436 0268 170B      		sbc r17,r23
 437               	.LVL25:
 342:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 438               		.loc 1 342 0
 439 026a A801      		movw r20,r16
 440               	.LVL26:
 441 026c 0E94 0000 		call memcpy
 442               	.LVL27:
 443 0270 00C0      		rjmp .L33
 444               	.LVL28:
 445               	.L14:
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 446               		.loc 1 296 0
 447 0272 4630      		cpi r20,6
 448 0274 A1E0      		ldi r26,1
 449 0276 5A07      		cpc r21,r26
 450 0278 A2E0      		ldi r26,2
 451 027a 6A07      		cpc r22,r26
 452 027c 7105      		cpc r23,__zero_reg__
 453 027e 00F4      		brsh .L25
 454 0280 4130      		cpi r20,1
 455 0282 B1E0      		ldi r27,1
 456 0284 5B07      		cpc r21,r27
 457 0286 B2E0      		ldi r27,2
 458 0288 6B07      		cpc r22,r27
 459 028a 7105      		cpc r23,__zero_reg__
 460 028c 00F0      		brlo .+2
 461 028e 00C0      		rjmp .L26
 462 0290 4431      		cpi r20,20
 463 0292 E1E0      		ldi r30,1
 464 0294 5E07      		cpc r21,r30
 465 0296 6E07      		cpc r22,r30
 466 0298 7105      		cpc r23,__zero_reg__
 467 029a 01F4      		brne .+2
 468 029c 00C0      		rjmp .L26
 469 029e 4230      		cpi r20,2
 470 02a0 F2E0      		ldi r31,2
 471 02a2 5F07      		cpc r21,r31
 472 02a4 F1E0      		ldi r31,1
 473 02a6 6F07      		cpc r22,r31
 474 02a8 7105      		cpc r23,__zero_reg__
 475 02aa 01F4      		brne .+2
 476 02ac 00C0      		rjmp .L26
 477 02ae 4131      		cpi r20,17
 478 02b0 5140      		sbci r21,1
 479 02b2 6140      		sbci r22,1
 480 02b4 7105      		cpc r23,__zero_reg__
 481 02b6 01F0      		breq .+2
 482 02b8 00C0      		rjmp .L12
 483               	.LVL29:
 356:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 357:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 358:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 359:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_CURRENT_ADDRESS:
 360:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 361:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 362:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 363:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 364:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 365:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 366:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 367:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 368:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate only one multicast address supported */
 369:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(1);
 370:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 371:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 372:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 373:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 374:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 375:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = cpu_to_le32(RNDISInterfaceInfo->State.CurrPacketFilter);
 376:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 377:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 378:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_OK:
 379:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_OK:
 380:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_ERROR:
 381:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_ERROR:
 382:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_NO_BUFFER:
 383:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 384:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 385:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 386:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 387:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 388:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Unused statistic OIDs - always return 0 for each */
 389:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 390:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 391:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 392:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 393:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 394:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 395:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 396:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(RNDISInterfaceInfo->Config.MessageBufferLength + ETHERN
 484               		.loc 1 396 0
 485 02ba D801      		movw r26,r16
 486 02bc 5A96      		adiw r26,26
 487 02be 8D91      		ld r24,X+
 488 02c0 9C91      		ld r25,X
 489 02c2 5B97      		sbiw r26,26+1
 490               	.LVL30:
 491 02c4 8452      		subi r24,36
 492 02c6 9A4F      		sbci r25,-6
 493 02c8 A0E0      		ldi r26,0
 494 02ca B0E0      		ldi r27,0
 495 02cc 00C0      		rjmp .L54
 496               	.LVL31:
 497               	.L25:
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 498               		.loc 1 296 0
 499 02ce 4430      		cpi r20,4
 500 02d0 A1E0      		ldi r26,1
 501 02d2 5A07      		cpc r21,r26
 502 02d4 6A07      		cpc r22,r26
 503 02d6 7A07      		cpc r23,r26
 504 02d8 01F0      		breq .L30
 505 02da 00F4      		brsh .L31
 506 02dc 4150      		subi r20,1
 507 02de 5140      		sbci r21,1
 508 02e0 6140      		sbci r22,1
 509 02e2 7140      		sbci r23,1
 510               	.LVL32:
 511 02e4 4230      		cpi r20,2
 512 02e6 5105      		cpc r21,__zero_reg__
 513 02e8 6105      		cpc r22,__zero_reg__
 514 02ea 7105      		cpc r23,__zero_reg__
 515 02ec 00F0      		brlo .+2
 516 02ee 00C0      		rjmp .L12
 517               	.LVL33:
 362:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 518               		.loc 1 362 0
 519 02f0 F801      		movw r30,r16
 520 02f2 7296      		adiw r30,18
 521 02f4 26E0      		ldi r18,lo8(6)
 522 02f6 DC01      		movw r26,r24
 523               		0:
 524 02f8 0190      		ld r0,Z+
 525 02fa 0D92      		st X+,r0
 526 02fc 2A95      		dec r18
 527 02fe 01F4      		brne 0b
 360:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 528               		.loc 1 360 0
 529 0300 06E0      		ldi r16,lo8(6)
 530 0302 10E0      		ldi r17,0
 531               	.LVL34:
 532 0304 00C0      		rjmp .L33
 533               	.LVL35:
 534               	.L31:
 296:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 535               		.loc 1 296 0
 536 0306 4150      		subi r20,1
 537 0308 5140      		sbci r21,1
 538 030a 6240      		sbci r22,2
 539 030c 7140      		sbci r23,1
 540               	.LVL36:
 541 030e 4330      		cpi r20,3
 542 0310 5105      		cpc r21,__zero_reg__
 543 0312 6105      		cpc r22,__zero_reg__
 544 0314 7105      		cpc r23,__zero_reg__
 545 0316 00F0      		brlo .L26
 546 0318 00C0      		rjmp .L12
 547               	.LVL37:
 548               	.L23:
 328:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 549               		.loc 1 328 0
 550 031a 8FEF      		ldi r24,lo8(-1)
 551 031c 9FEF      		ldi r25,lo8(-1)
 552 031e AFEF      		ldi r26,lo8(-1)
 553 0320 B0E0      		ldi r27,0
 554               	.LVL38:
 555 0322 00C0      		rjmp .L54
 556               	.LVL39:
 557               	.L15:
 336:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 558               		.loc 1 336 0
 559 0324 8CED      		ldi r24,lo8(-36)
 560 0326 95E0      		ldi r25,lo8(5)
 561 0328 A0E0      		ldi r26,0
 562 032a B0E0      		ldi r27,0
 563               	.LVL40:
 564 032c 00C0      		rjmp .L54
 565               	.LVL41:
 566               	.L30:
 369:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 567               		.loc 1 369 0
 568 032e 81E0      		ldi r24,lo8(1)
 569 0330 90E0      		ldi r25,0
 570 0332 A0E0      		ldi r26,0
 571 0334 B0E0      		ldi r27,0
 572               	.LVL42:
 573 0336 00C0      		rjmp .L54
 574               	.LVL43:
 575               	.L13:
 375:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 576               		.loc 1 375 0
 577 0338 F801      		movw r30,r16
 578 033a 868D      		ldd r24,Z+30
 579 033c 978D      		ldd r25,Z+31
 580 033e A0A1      		ldd r26,Z+32
 581 0340 B1A1      		ldd r27,Z+33
 582               	.LVL44:
 583 0342 00C0      		rjmp .L54
 584               	.LVL45:
 585               	.L26:
 389:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 586               		.loc 1 389 0
 587 0344 188E      		std Y+24,__zero_reg__
 588 0346 198E      		std Y+25,__zero_reg__
 589 0348 1A8E      		std Y+26,__zero_reg__
 590 034a 1B8E      		std Y+27,__zero_reg__
 591 034c 00C0      		rjmp .L53
 592               	.LVL46:
 593               	.L54:
 594               		.loc 1 396 0
 595 034e 888F      		std Y+24,r24
 596 0350 998F      		std Y+25,r25
 597 0352 AA8F      		std Y+26,r26
 598 0354 BB8F      		std Y+27,r27
 599               	.LVL47:
 600               	.L53:
 393:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 601               		.loc 1 393 0
 602 0356 04E0      		ldi r16,lo8(4)
 603 0358 10E0      		ldi r17,0
 604               	.LVL48:
 605 035a 00C0      		rjmp .L33
 606               	.LVL49:
 607               	.L10:
 608               	.LBE64:
 609               	.LBE63:
 241:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 610               		.loc 1 241 0
 611 035c 81E0      		ldi r24,lo8(1)
 612 035e F801      		movw r30,r16
 613 0360 848F      		std Z+28,r24
 614               	.LVL50:
 245:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 615               		.loc 1 245 0
 616 0362 8C85      		ldd r24,Y+12
 617 0364 9D85      		ldd r25,Y+13
 618 0366 AE85      		ldd r26,Y+14
 619 0368 BF85      		ldd r27,Y+15
 620               	.LVL51:
 247:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 621               		.loc 1 247 0
 622 036a 45E0      		ldi r20,lo8(5)
 623 036c 50E0      		ldi r21,0
 624 036e 60E0      		ldi r22,0
 625 0370 70E8      		ldi r23,lo8(-128)
 626 0372 4883      		st Y,r20
 627 0374 5983      		std Y+1,r21
 628 0376 6A83      		std Y+2,r22
 629 0378 7B83      		std Y+3,r23
 248:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 630               		.loc 1 248 0
 631 037a 40E1      		ldi r20,lo8(16)
 632 037c 50E0      		ldi r21,0
 633 037e 60E0      		ldi r22,0
 634 0380 70E0      		ldi r23,0
 635 0382 4C83      		std Y+4,r20
 636 0384 5D83      		std Y+5,r21
 637 0386 6E83      		std Y+6,r22
 638 0388 7F83      		std Y+7,r23
 639               	.LVL52:
 640               	.LBB65:
 641               	.LBB66:
 397:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 398:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 399:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 400:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 401:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 402:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 403:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 404:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 405:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint32_t OId,
 406:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const void* SetData,
 407:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint16_t SetSize)
 408:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 409:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)SetSize;
 410:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 411:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 642               		.loc 1 411 0
 643 038a 8E30      		cpi r24,14
 644 038c F1E0      		ldi r31,1
 645 038e 9F07      		cpc r25,r31
 646 0390 AF07      		cpc r26,r31
 647 0392 B105      		cpc r27,__zero_reg__
 648 0394 01F0      		breq .L35
 649               	.LVL53:
 650 0396 8330      		cpi r24,3
 651 0398 9140      		sbci r25,1
 652 039a A140      		sbci r26,1
 653 039c B140      		sbci r27,1
 654 039e 01F0      		breq .L36
 655               	.LBE66:
 656               	.LBE65:
 256:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 657               		.loc 1 256 0
 658 03a0 8BEB      		ldi r24,lo8(-69)
 659 03a2 90E0      		ldi r25,0
 660 03a4 A0E0      		ldi r26,0
 661 03a6 B0EC      		ldi r27,lo8(-64)
 662               	.LVL54:
 663 03a8 00C0      		rjmp .L34
 664               	.LVL55:
 665               	.L35:
 666               	.LBB68:
 667               	.LBB67:
 412:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 413:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 414:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = le32_to_cpu(*((uint32_t*)SetData));
 668               		.loc 1 414 0
 669 03aa D801      		movw r26,r16
 670 03ac 5896      		adiw r26,24
 671 03ae ED91      		ld r30,X+
 672 03b0 FC91      		ld r31,X
 673 03b2 5997      		sbiw r26,24+1
 674 03b4 8C89      		ldd r24,Y+20
 675 03b6 9D89      		ldd r25,Y+21
 676               	.LVL56:
 677 03b8 E80F      		add r30,r24
 678 03ba F91F      		adc r31,r25
 679 03bc 8085      		ldd r24,Z+8
 680 03be 9185      		ldd r25,Z+9
 681 03c0 A285      		ldd r26,Z+10
 682 03c2 B385      		ldd r27,Z+11
 683 03c4 F801      		movw r30,r16
 684 03c6 868F      		std Z+30,r24
 685 03c8 978F      		std Z+31,r25
 686 03ca A0A3      		std Z+32,r26
 687 03cc B1A3      		std Z+33,r27
 688               	.LVL57:
 415:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState   = (RNDISInterfaceInfo->State.CurrPacketFilter) ? RNDI
 689               		.loc 1 415 0
 690 03ce 892B      		or r24,r25
 691 03d0 8A2B      		or r24,r26
 692 03d2 8B2B      		or r24,r27
 693 03d4 01F4      		brne .L40
 694 03d6 81E0      		ldi r24,lo8(1)
 695 03d8 00C0      		rjmp .L37
 696               	.L40:
 697 03da 82E0      		ldi r24,lo8(2)
 698               	.L37:
 699 03dc D801      		movw r26,r16
 700 03de 5D96      		adiw r26,29
 701 03e0 8C93      		st X,r24
 702               	.L36:
 703               	.LVL58:
 704               	.LBE67:
 705               	.LBE68:
 256:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 706               		.loc 1 256 0
 707 03e2 80E0      		ldi r24,0
 708 03e4 90E0      		ldi r25,0
 709 03e6 DC01      		movw r26,r24
 710               	.L34:
 254:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 711               		.loc 1 254 0
 712 03e8 8C87      		std Y+12,r24
 713 03ea 9D87      		std Y+13,r25
 714 03ec AE87      		std Y+14,r26
 715 03ee BF87      		std Y+15,r27
 716 03f0 00C0      		rjmp .L1
 717               	.LVL59:
 718               	.L9:
 259:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 719               		.loc 1 259 0
 720 03f2 81E0      		ldi r24,lo8(1)
 721 03f4 F801      		movw r30,r16
 722 03f6 848F      		std Z+28,r24
 723               	.LVL60:
 263:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 724               		.loc 1 263 0
 725 03f8 86E0      		ldi r24,lo8(6)
 726 03fa 90E0      		ldi r25,0
 727 03fc A0E0      		ldi r26,0
 728 03fe B0E8      		ldi r27,lo8(-128)
 729 0400 8883      		st Y,r24
 730 0402 9983      		std Y+1,r25
 731 0404 AA83      		std Y+2,r26
 732 0406 BB83      		std Y+3,r27
 264:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 733               		.loc 1 264 0
 734 0408 80E1      		ldi r24,lo8(16)
 735 040a 90E0      		ldi r25,0
 736 040c A0E0      		ldi r26,0
 737 040e B0E0      		ldi r27,0
 738 0410 8C83      		std Y+4,r24
 739 0412 9D83      		std Y+5,r25
 740 0414 AE83      		std Y+6,r26
 741 0416 BF83      		std Y+7,r27
 265:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 742               		.loc 1 265 0
 743 0418 1886      		std Y+8,__zero_reg__
 744 041a 1986      		std Y+9,__zero_reg__
 745 041c 1A86      		std Y+10,__zero_reg__
 746 041e 1B86      		std Y+11,__zero_reg__
 747               	.LVL61:
 748               	.L55:
 280:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 749               		.loc 1 280 0
 750 0420 1C86      		std Y+12,__zero_reg__
 751 0422 1D86      		std Y+13,__zero_reg__
 752 0424 1E86      		std Y+14,__zero_reg__
 753 0426 1F86      		std Y+15,__zero_reg__
 754 0428 00C0      		rjmp .L1
 755               	.LVL62:
 756               	.L4:
 757               	.LBE69:
 758               	.LBE61:
 759               	.LBE60:
  93:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 760               		.loc 1 93 0
 761 042a 8091 0000 		lds r24,USB_ControlRequest
 762 042e 813A      		cpi r24,lo8(-95)
 763 0430 01F0      		breq .+2
 764 0432 00C0      		rjmp .L1
 765               	.LBB72:
  95:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 766               		.loc 1 95 0
 767 0434 FD01      		movw r30,r26
 768 0436 C08D      		ldd r28,Z+24
 769 0438 D18D      		ldd r29,Z+25
 770               	.LVL63:
  97:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				{
 771               		.loc 1 97 0
 772 043a 8C81      		ldd r24,Y+4
 773 043c 9D81      		ldd r25,Y+5
 774 043e AE81      		ldd r26,Y+6
 775 0440 BF81      		ldd r27,Y+7
 776 0442 892B      		or r24,r25
 777 0444 8A2B      		or r24,r26
 778 0446 8B2B      		or r24,r27
 779 0448 01F4      		brne .L38
  99:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                = CPU_TO_LE32(1);
 780               		.loc 1 99 0
 781 044a 1882      		st Y,__zero_reg__
 100:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				}
 782               		.loc 1 100 0
 783 044c 81E0      		ldi r24,lo8(1)
 784 044e 90E0      		ldi r25,0
 785 0450 A0E0      		ldi r26,0
 786 0452 B0E0      		ldi r27,0
 787 0454 8C83      		std Y+4,r24
 788 0456 9D83      		std Y+5,r25
 789 0458 AE83      		std Y+6,r26
 790 045a BF83      		std Y+7,r27
 791               	.L38:
 792               	.LBB73:
 793               	.LBB74:
 444:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 794               		.loc 2 444 0
 795 045c 8091 E800 		lds r24,232
 796 0460 877F      		andi r24,lo8(-9)
 797 0462 8093 E800 		sts 232,r24
 798               	.LBE74:
 799               	.LBE73:
 104:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearOUT();
 800               		.loc 1 104 0
 801 0466 6C81      		ldd r22,Y+4
 802 0468 7D81      		ldd r23,Y+5
 803 046a D801      		movw r26,r16
 804 046c 5896      		adiw r26,24
 805 046e 8D91      		ld r24,X+
 806 0470 9C91      		ld r25,X
 807 0472 5997      		sbiw r26,24+1
 808 0474 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 809               	.LVL64:
 810               	.LBB75:
 811               	.LBB76:
 457:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 812               		.loc 2 471 0
 813 0478 8091 E800 		lds r24,232
 814 047c 8B77      		andi r24,lo8(123)
 815 047e 8093 E800 		sts 232,r24
 816               	.LBE76:
 817               	.LBE75:
 107:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 818               		.loc 1 107 0
 819 0482 1C82      		std Y+4,__zero_reg__
 820 0484 1D82      		std Y+5,__zero_reg__
 821 0486 1E82      		std Y+6,__zero_reg__
 822 0488 1F82      		std Y+7,__zero_reg__
 823 048a 00C0      		rjmp .L1
 824               	.LVL65:
 825               	.L33:
 826               	.LBE72:
 827               	.LBB77:
 828               	.LBB71:
 829               	.LBB70:
 224:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 830               		.loc 1 224 0
 831 048c 1C86      		std Y+12,__zero_reg__
 832 048e 1D86      		std Y+13,__zero_reg__
 833 0490 1E86      		std Y+14,__zero_reg__
 834 0492 1F86      		std Y+15,__zero_reg__
 225:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 835               		.loc 1 225 0
 836 0494 C801      		movw r24,r16
 837 0496 4896      		adiw r24,24
 838 0498 A0E0      		ldi r26,0
 839 049a B0E0      		ldi r27,0
 840 049c 8C83      		std Y+4,r24
 841 049e 9D83      		std Y+5,r25
 842 04a0 AE83      		std Y+6,r26
 843 04a2 BF83      		std Y+7,r27
 227:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 844               		.loc 1 227 0
 845 04a4 A801      		movw r20,r16
 846 04a6 60E0      		ldi r22,0
 847 04a8 70E0      		ldi r23,0
 848 04aa 488B      		std Y+16,r20
 849 04ac 598B      		std Y+17,r21
 850 04ae 6A8B      		std Y+18,r22
 851 04b0 7B8B      		std Y+19,r23
 228:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 852               		.loc 1 228 0
 853 04b2 80E1      		ldi r24,lo8(16)
 854 04b4 90E0      		ldi r25,0
 855 04b6 A0E0      		ldi r26,0
 856 04b8 B0E0      		ldi r27,0
 857 04ba 8C8B      		std Y+20,r24
 858 04bc 9D8B      		std Y+21,r25
 859 04be AE8B      		std Y+22,r26
 860 04c0 BF8B      		std Y+23,r27
 861 04c2 00C0      		rjmp .L1
 862               	.LVL66:
 863               	.L12:
 232:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 864               		.loc 1 232 0
 865 04c4 8BEB      		ldi r24,lo8(-69)
 866 04c6 90E0      		ldi r25,0
 867 04c8 A0E0      		ldi r26,0
 868 04ca B0EC      		ldi r27,lo8(-64)
 869 04cc 8C87      		std Y+12,r24
 870 04ce 9D87      		std Y+13,r25
 871 04d0 AE87      		std Y+14,r26
 872 04d2 BF87      		std Y+15,r27
 873               	.LVL67:
 233:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 874               		.loc 1 233 0
 875 04d4 88E1      		ldi r24,lo8(24)
 876 04d6 90E0      		ldi r25,0
 877 04d8 A0E0      		ldi r26,0
 878 04da B0E0      		ldi r27,0
 879 04dc 8C83      		std Y+4,r24
 880 04de 9D83      		std Y+5,r25
 881 04e0 AE83      		std Y+6,r26
 882 04e2 BF83      		std Y+7,r27
 235:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 883               		.loc 1 235 0
 884 04e4 188A      		std Y+16,__zero_reg__
 885 04e6 198A      		std Y+17,__zero_reg__
 886 04e8 1A8A      		std Y+18,__zero_reg__
 887 04ea 1B8A      		std Y+19,__zero_reg__
 236:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 888               		.loc 1 236 0
 889 04ec 1C8A      		std Y+20,__zero_reg__
 890 04ee 1D8A      		std Y+21,__zero_reg__
 891 04f0 1E8A      		std Y+22,__zero_reg__
 892 04f2 1F8A      		std Y+23,__zero_reg__
 893               	.LVL68:
 894               	.L1:
 895               	/* epilogue start */
 896               	.LBE70:
 897               	.LBE71:
 898               	.LBE77:
 112:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 899               		.loc 1 112 0
 900 04f4 DF91      		pop r29
 901 04f6 CF91      		pop r28
 902 04f8 1F91      		pop r17
 903 04fa 0F91      		pop r16
 904 04fc FF90      		pop r15
 905 04fe EF90      		pop r14
 906 0500 DF90      		pop r13
 907 0502 CF90      		pop r12
 908 0504 0895      		ret
 909               		.cfi_endproc
 910               	.LFE100:
 912               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 913               	.global	RNDIS_Device_ConfigureEndpoints
 915               	RNDIS_Device_ConfigureEndpoints:
 916               	.LFB101:
 115:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 917               		.loc 1 115 0
 918               		.cfi_startproc
 919               	.LVL69:
 920 0000 CF93      		push r28
 921               	.LCFI8:
 922               		.cfi_def_cfa_offset 3
 923               		.cfi_offset 28, -2
 924 0002 DF93      		push r29
 925               	.LCFI9:
 926               		.cfi_def_cfa_offset 4
 927               		.cfi_offset 29, -3
 928               	/* prologue: function */
 929               	/* frame size = 0 */
 930               	/* stack size = 2 */
 931               	.L__stack_usage = 2
 932 0004 FC01      		movw r30,r24
 116:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 933               		.loc 1 116 0
 934 0006 DC01      		movw r26,r24
 935 0008 5C96      		adiw r26,28
 936 000a 86E0      		ldi r24,lo8(6)
 937               	.LVL70:
 938 000c ED01      		movw r28,r26
 939               		0:
 940 000e 1992      		st Y+,__zero_reg__
 941 0010 8A95      		dec r24
 942 0012 01F4      		brne 0b
 118:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISInterfaceInfo->Config.DataOUTEndpoint.Type      = EP_TYPE_BULK;
 943               		.loc 1 118 0
 944 0014 82E0      		ldi r24,lo8(2)
 945 0016 8483      		std Z+4,r24
 119:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISInterfaceInfo->Config.NotificationEndpoint.Type = EP_TYPE_INTERRUPT;
 946               		.loc 1 119 0
 947 0018 8187      		std Z+9,r24
 120:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 948               		.loc 1 120 0
 949 001a 83E0      		ldi r24,lo8(3)
 950 001c 8687      		std Z+14,r24
 122:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 951               		.loc 1 122 0
 952 001e 808D      		ldd r24,Z+24
 953 0020 918D      		ldd r25,Z+25
 954 0022 892B      		or r24,r25
 955 0024 01F0      		breq .L59
 125:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 956               		.loc 1 125 0
 957 0026 828D      		ldd r24,Z+26
 958 0028 938D      		ldd r25,Z+27
 959 002a 8438      		cpi r24,-124
 960 002c 9105      		cpc r25,__zero_reg__
 961 002e 00F0      		brlo .L59
 962 0030 EF01      		movw r28,r30
 128:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 963               		.loc 1 128 0
 964 0032 61E0      		ldi r22,lo8(1)
 965 0034 CF01      		movw r24,r30
 966 0036 0196      		adiw r24,1
 967 0038 0E94 0000 		call Endpoint_ConfigureEndpointTable
 968               	.LVL71:
 969 003c 8823      		tst r24
 970 003e 01F0      		breq .L59
 131:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 971               		.loc 1 131 0
 972 0040 61E0      		ldi r22,lo8(1)
 973 0042 CE01      		movw r24,r28
 974 0044 0696      		adiw r24,6
 975 0046 0E94 0000 		call Endpoint_ConfigureEndpointTable
 976               	.LVL72:
 977 004a 8823      		tst r24
 978 004c 01F0      		breq .L59
 134:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 979               		.loc 1 134 0
 980 004e 61E0      		ldi r22,lo8(1)
 981 0050 CE01      		movw r24,r28
 982 0052 0B96      		adiw r24,11
 983               	/* epilogue start */
 138:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 984               		.loc 1 138 0
 985 0054 DF91      		pop r29
 986 0056 CF91      		pop r28
 987               	.LVL73:
 134:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return false;
 988               		.loc 1 134 0
 989 0058 0C94 0000 		jmp Endpoint_ConfigureEndpointTable
 990               	.LVL74:
 991               	.L59:
 138:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 992               		.loc 1 138 0
 993 005c 80E0      		ldi r24,0
 994               	/* epilogue start */
 995 005e DF91      		pop r29
 996 0060 CF91      		pop r28
 997 0062 0895      		ret
 998               		.cfi_endproc
 999               	.LFE101:
 1001               		.section	.rodata
 1002               	.LC0:
 1003 0000 A1        		.byte	-95
 1004 0001 01        		.byte	1
 1005 0002 0000      		.word	0
 1006 0004 0000      		.word	0
 1007 0006 0000      		.word	0
 1008               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1009               	.global	RNDIS_Device_USBTask
 1011               	RNDIS_Device_USBTask:
 1012               	.LFB102:
 141:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1013               		.loc 1 141 0
 1014               		.cfi_startproc
 1015               	.LVL75:
 1016 0000 0F93      		push r16
 1017               	.LCFI10:
 1018               		.cfi_def_cfa_offset 3
 1019               		.cfi_offset 16, -2
 1020 0002 1F93      		push r17
 1021               	.LCFI11:
 1022               		.cfi_def_cfa_offset 4
 1023               		.cfi_offset 17, -3
 1024 0004 CF93      		push r28
 1025               	.LCFI12:
 1026               		.cfi_def_cfa_offset 5
 1027               		.cfi_offset 28, -4
 1028 0006 DF93      		push r29
 1029               	.LCFI13:
 1030               		.cfi_def_cfa_offset 6
 1031               		.cfi_offset 29, -5
 1032 0008 CDB7      		in r28,__SP_L__
 1033 000a DEB7      		in r29,__SP_H__
 1034               	.LCFI14:
 1035               		.cfi_def_cfa_register 28
 1036 000c 2897      		sbiw r28,8
 1037               	.LCFI15:
 1038               		.cfi_def_cfa_offset 14
 1039 000e 0FB6      		in __tmp_reg__,__SREG__
 1040 0010 F894      		cli
 1041 0012 DEBF      		out __SP_H__,r29
 1042 0014 0FBE      		out __SREG__,__tmp_reg__
 1043 0016 CDBF      		out __SP_L__,r28
 1044               	/* prologue: function */
 1045               	/* frame size = 8 */
 1046               	/* stack size = 12 */
 1047               	.L__stack_usage = 12
 142:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
 1048               		.loc 1 142 0
 1049 0018 2091 0000 		lds r18,USB_DeviceState
 1050 001c 2430      		cpi r18,lo8(4)
 1051 001e 01F4      		brne .L67
 1052               	.LVL76:
 1053               	.LBB78:
 1054               	.LBB79:
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1055               		.loc 2 270 0
 1056 0020 FC01      		movw r30,r24
 1057 0022 2385      		ldd r18,Z+11
 1058 0024 2F70      		andi r18,lo8(15)
 1059 0026 2093 E900 		sts 233,r18
 1060               	.LVL77:
 1061               	.LBE79:
 1062               	.LBE78:
 1063               	.LBB80:
 1064               	.LBB81:
 407:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1065               		.loc 2 407 0
 1066 002a 2091 E800 		lds r18,232
 1067               	.LBE81:
 1068               	.LBE80:
 147:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 1069               		.loc 1 147 0
 1070 002e 20FF      		sbrs r18,0
 1071 0030 00C0      		rjmp .L67
 147:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 1072               		.loc 1 147 0 is_stmt 0 discriminator 1
 1073 0032 248D      		ldd r18,Z+28
 1074 0034 2223      		tst r18
 1075 0036 01F0      		breq .L67
 1076 0038 8C01      		movw r16,r24
 1077               	.LBB82:
 149:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 1078               		.loc 1 149 0 is_stmt 1 discriminator 2
 1079 003a 88E0      		ldi r24,lo8(8)
 1080               	.LVL78:
 1081 003c E0E0      		ldi r30,lo8(.LC0)
 1082 003e F0E0      		ldi r31,hi8(.LC0)
 1083 0040 DE01      		movw r26,r28
 1084 0042 1196      		adiw r26,1
 1085               		0:
 1086 0044 0190      		ld r0,Z+
 1087 0046 0D92      		st X+,r0
 1088 0048 8A95      		dec r24
 1089 004a 01F4      		brne 0b
 158:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 1090               		.loc 1 158 0 discriminator 2
 1091 004c 40E0      		ldi r20,0
 1092 004e 50E0      		ldi r21,0
 1093 0050 68E0      		ldi r22,lo8(8)
 1094 0052 70E0      		ldi r23,0
 1095 0054 CE01      		movw r24,r28
 1096 0056 0196      		adiw r24,1
 1097 0058 0E94 0000 		call Endpoint_Write_Stream_LE
 1098               	.LVL79:
 1099               	.LBB83:
 1100               	.LBB84:
 456:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1101               		.loc 2 456 0 discriminator 2
 1102 005c 8091 E800 		lds r24,232
 1103 0060 8E77      		andi r24,lo8(126)
 1104 0062 8093 E800 		sts 232,r24
 1105               	.LBE84:
 1106               	.LBE83:
 162:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 1107               		.loc 1 162 0 discriminator 2
 1108 0066 F801      		movw r30,r16
 1109 0068 148E      		std Z+28,__zero_reg__
 1110               	.LVL80:
 1111               	.L67:
 1112               	/* epilogue start */
 1113               	.LBE82:
 164:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 1114               		.loc 1 164 0
 1115 006a 2896      		adiw r28,8
 1116 006c 0FB6      		in __tmp_reg__,__SREG__
 1117 006e F894      		cli
 1118 0070 DEBF      		out __SP_H__,r29
 1119 0072 0FBE      		out __SREG__,__tmp_reg__
 1120 0074 CDBF      		out __SP_L__,r28
 1121 0076 DF91      		pop r29
 1122 0078 CF91      		pop r28
 1123 007a 1F91      		pop r17
 1124 007c 0F91      		pop r16
 1125 007e 0895      		ret
 1126               		.cfi_endproc
 1127               	.LFE102:
 1129               		.section	.text.RNDIS_Device_IsPacketReceived,"ax",@progbits
 1130               	.global	RNDIS_Device_IsPacketReceived
 1132               	RNDIS_Device_IsPacketReceived:
 1133               	.LFB106:
 416:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 417:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 418:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MULTICAST_LIST:
 419:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Do nothing - throw away the value from the host as it is unused */
 420:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 421:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 422:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 423:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 424:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 425:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 426:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 427:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_IsPacketReceived(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 428:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1134               		.loc 1 428 0
 1135               		.cfi_startproc
 1136               	.LVL81:
 1137               	/* prologue: function */
 1138               	/* frame size = 0 */
 1139               	/* stack size = 0 */
 1140               	.L__stack_usage = 0
 429:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1141               		.loc 1 429 0
 1142 0000 2091 0000 		lds r18,USB_DeviceState
 1143 0004 2430      		cpi r18,lo8(4)
 1144 0006 01F4      		brne .L80
 1145               		.loc 1 429 0 is_stmt 0 discriminator 1
 1146 0008 FC01      		movw r30,r24
 1147 000a 258D      		ldd r18,Z+29
 1148 000c 2230      		cpi r18,lo8(2)
 1149 000e 01F4      		brne .L80
 1150               	.LBB85:
 1151               	.LBB86:
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1152               		.loc 2 270 0 is_stmt 1
 1153 0010 8681      		ldd r24,Z+6
 1154               	.LVL82:
 1155 0012 8F70      		andi r24,lo8(15)
 1156 0014 8093 E900 		sts 233,r24
 1157               	.LBE86:
 1158               	.LBE85:
 1159               	.LBB87:
 1160               	.LBB88:
 419:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1161               		.loc 2 419 0
 1162 0018 8091 E800 		lds r24,232
 1163 001c 82FB      		bst r24,2
 1164 001e 8827      		clr r24
 1165 0020 80F9      		bld r24,0
 1166               	.LBE88:
 1167               	.LBE87:
 430:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 431:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 432:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return false;
 433:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 434:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 435:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpoint.Address);
 436:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return Endpoint_IsOUTReceived();
 1168               		.loc 1 436 0
 1169 0022 0895      		ret
 1170               	.LVL83:
 1171               	.L80:
 432:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 1172               		.loc 1 432 0
 1173 0024 80E0      		ldi r24,0
 1174               	.LVL84:
 437:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1175               		.loc 1 437 0
 1176 0026 0895      		ret
 1177               		.cfi_endproc
 1178               	.LFE106:
 1180               		.section	.text.RNDIS_Device_ReadPacket,"ax",@progbits
 1181               	.global	RNDIS_Device_ReadPacket
 1183               	RNDIS_Device_ReadPacket:
 1184               	.LFB107:
 438:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 439:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_ReadPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 440:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 441:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 uint16_t* const PacketLength)
 442:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1185               		.loc 1 442 0
 1186               		.cfi_startproc
 1187               	.LVL85:
 1188 0000 EF92      		push r14
 1189               	.LCFI16:
 1190               		.cfi_def_cfa_offset 3
 1191               		.cfi_offset 14, -2
 1192 0002 FF92      		push r15
 1193               	.LCFI17:
 1194               		.cfi_def_cfa_offset 4
 1195               		.cfi_offset 15, -3
 1196 0004 0F93      		push r16
 1197               	.LCFI18:
 1198               		.cfi_def_cfa_offset 5
 1199               		.cfi_offset 16, -4
 1200 0006 1F93      		push r17
 1201               	.LCFI19:
 1202               		.cfi_def_cfa_offset 6
 1203               		.cfi_offset 17, -5
 1204 0008 CF93      		push r28
 1205               	.LCFI20:
 1206               		.cfi_def_cfa_offset 7
 1207               		.cfi_offset 28, -6
 1208 000a DF93      		push r29
 1209               	.LCFI21:
 1210               		.cfi_def_cfa_offset 8
 1211               		.cfi_offset 29, -7
 1212 000c CDB7      		in r28,__SP_L__
 1213 000e DEB7      		in r29,__SP_H__
 1214               	.LCFI22:
 1215               		.cfi_def_cfa_register 28
 1216 0010 AC97      		sbiw r28,44
 1217               	.LCFI23:
 1218               		.cfi_def_cfa_offset 52
 1219 0012 0FB6      		in __tmp_reg__,__SREG__
 1220 0014 F894      		cli
 1221 0016 DEBF      		out __SP_H__,r29
 1222 0018 0FBE      		out __SREG__,__tmp_reg__
 1223 001a CDBF      		out __SP_L__,r28
 1224               	/* prologue: function */
 1225               	/* frame size = 44 */
 1226               	/* stack size = 50 */
 1227               	.L__stack_usage = 50
 443:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1228               		.loc 1 443 0
 1229 001c 2091 0000 		lds r18,USB_DeviceState
 1230 0020 2430      		cpi r18,lo8(4)
 1231 0022 01F4      		brne .L85
 1232               		.loc 1 443 0 is_stmt 0 discriminator 1
 1233 0024 FC01      		movw r30,r24
 1234 0026 258D      		ldd r18,Z+29
 1235 0028 2230      		cpi r18,lo8(2)
 1236 002a 01F4      		brne .L85
 1237               	.LBB89:
 1238               	.LBB90:
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1239               		.loc 2 270 0 is_stmt 1
 1240 002c 8681      		ldd r24,Z+6
 1241               	.LVL86:
 1242 002e 8F70      		andi r24,lo8(15)
 1243 0030 8093 E900 		sts 233,r24
 1244               	.LBE90:
 1245               	.LBE89:
 444:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 445:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 446:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 447:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 448:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 449:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpoint.Address);
 450:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 451:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = 0;
 1246               		.loc 1 451 0
 1247 0034 FA01      		movw r30,r20
 1248               	.LVL87:
 1249 0036 1182      		std Z+1,__zero_reg__
 1250 0038 1082      		st Z,__zero_reg__
 1251               	.LBB91:
 1252               	.LBB92:
 419:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1253               		.loc 2 419 0
 1254 003a 9091 E800 		lds r25,232
 1255               	.LBE92:
 1256               	.LBE91:
 452:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 453:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsOUTReceived()))
 1257               		.loc 1 453 0
 1258 003e 892F      		mov r24,r25
 1259 0040 8470      		andi r24,lo8(4)
 1260 0042 92FF      		sbrs r25,2
 1261 0044 00C0      		rjmp .L82
 1262 0046 8A01      		movw r16,r20
 1263 0048 7B01      		movw r14,r22
 454:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_NoError;
 455:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 456:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 457:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1264               		.loc 1 457 0
 1265 004a 40E0      		ldi r20,0
 1266 004c 50E0      		ldi r21,0
 1267               	.LVL88:
 1268 004e 6CE2      		ldi r22,lo8(44)
 1269 0050 70E0      		ldi r23,0
 1270               	.LVL89:
 1271 0052 CE01      		movw r24,r28
 1272 0054 0196      		adiw r24,1
 1273 0056 0E94 0000 		call Endpoint_Read_Stream_LE
 1274               	.LVL90:
 458:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 459:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (le32_to_cpu(RNDISPacketHeader.DataLength) > ETHERNET_FRAME_SIZE_MAX)
 1275               		.loc 1 459 0
 1276 005a 6D85      		ldd r22,Y+13
 1277 005c 7E85      		ldd r23,Y+14
 1278 005e 8F85      		ldd r24,Y+15
 1279 0060 9889      		ldd r25,Y+16
 1280 0062 6D3D      		cpi r22,-35
 1281 0064 F5E0      		ldi r31,5
 1282 0066 7F07      		cpc r23,r31
 1283 0068 8105      		cpc r24,__zero_reg__
 1284 006a 9105      		cpc r25,__zero_reg__
 1285 006c 00F0      		brlo .L83
 1286               	.LBB93:
 1287               	.LBB94:
 472:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 1288               		.loc 2 491 0
 1289 006e 8091 EB00 		lds r24,235
 1290 0072 8062      		ori r24,lo8(32)
 1291 0074 8093 EB00 		sts 235,r24
 1292               	.LBE94:
 1293               	.LBE93:
 460:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 461:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_StallTransaction();
 462:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 463:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return RNDIS_ERROR_LOGICAL_CMD_FAILED;
 1294               		.loc 1 463 0
 1295 0078 80E8      		ldi r24,lo8(-128)
 1296 007a 00C0      		rjmp .L82
 1297               	.L83:
 464:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 465:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 466:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = (uint16_t)le32_to_cpu(RNDISPacketHeader.DataLength);
 1298               		.loc 1 466 0
 1299 007c F801      		movw r30,r16
 1300 007e 7183      		std Z+1,r23
 1301 0080 6083      		st Z,r22
 467:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 468:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(Buffer, *PacketLength, NULL);
 1302               		.loc 1 468 0
 1303 0082 40E0      		ldi r20,0
 1304 0084 50E0      		ldi r21,0
 1305 0086 C701      		movw r24,r14
 1306 0088 0E94 0000 		call Endpoint_Read_Stream_LE
 1307               	.LVL91:
 1308               	.LBB95:
 1309               	.LBB96:
 471:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1310               		.loc 2 471 0
 1311 008c 8091 E800 		lds r24,232
 1312 0090 8B77      		andi r24,lo8(123)
 1313 0092 8093 E800 		sts 232,r24
 1314               	.LBE96:
 1315               	.LBE95:
 469:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearOUT();
 470:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 471:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1316               		.loc 1 471 0
 1317 0096 80E0      		ldi r24,0
 1318 0098 00C0      		rjmp .L82
 1319               	.LVL92:
 1320               	.L85:
 446:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 1321               		.loc 1 446 0
 1322 009a 82E0      		ldi r24,lo8(2)
 1323               	.LVL93:
 1324               	.L82:
 1325               	/* epilogue start */
 472:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1326               		.loc 1 472 0
 1327 009c AC96      		adiw r28,44
 1328 009e 0FB6      		in __tmp_reg__,__SREG__
 1329 00a0 F894      		cli
 1330 00a2 DEBF      		out __SP_H__,r29
 1331 00a4 0FBE      		out __SREG__,__tmp_reg__
 1332 00a6 CDBF      		out __SP_L__,r28
 1333 00a8 DF91      		pop r29
 1334 00aa CF91      		pop r28
 1335 00ac 1F91      		pop r17
 1336 00ae 0F91      		pop r16
 1337 00b0 FF90      		pop r15
 1338 00b2 EF90      		pop r14
 1339 00b4 0895      		ret
 1340               		.cfi_endproc
 1341               	.LFE107:
 1343               		.section	.text.RNDIS_Device_SendPacket,"ax",@progbits
 1344               	.global	RNDIS_Device_SendPacket
 1346               	RNDIS_Device_SendPacket:
 1347               	.LFB108:
 473:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 474:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_SendPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 475:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 476:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 const uint16_t PacketLength)
 477:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1348               		.loc 1 477 0
 1349               		.cfi_startproc
 1350               	.LVL94:
 1351 0000 EF92      		push r14
 1352               	.LCFI24:
 1353               		.cfi_def_cfa_offset 3
 1354               		.cfi_offset 14, -2
 1355 0002 FF92      		push r15
 1356               	.LCFI25:
 1357               		.cfi_def_cfa_offset 4
 1358               		.cfi_offset 15, -3
 1359 0004 0F93      		push r16
 1360               	.LCFI26:
 1361               		.cfi_def_cfa_offset 5
 1362               		.cfi_offset 16, -4
 1363 0006 1F93      		push r17
 1364               	.LCFI27:
 1365               		.cfi_def_cfa_offset 6
 1366               		.cfi_offset 17, -5
 1367 0008 CF93      		push r28
 1368               	.LCFI28:
 1369               		.cfi_def_cfa_offset 7
 1370               		.cfi_offset 28, -6
 1371 000a DF93      		push r29
 1372               	.LCFI29:
 1373               		.cfi_def_cfa_offset 8
 1374               		.cfi_offset 29, -7
 1375 000c CDB7      		in r28,__SP_L__
 1376 000e DEB7      		in r29,__SP_H__
 1377               	.LCFI30:
 1378               		.cfi_def_cfa_register 28
 1379 0010 AC97      		sbiw r28,44
 1380               	.LCFI31:
 1381               		.cfi_def_cfa_offset 52
 1382 0012 0FB6      		in __tmp_reg__,__SREG__
 1383 0014 F894      		cli
 1384 0016 DEBF      		out __SP_H__,r29
 1385 0018 0FBE      		out __SREG__,__tmp_reg__
 1386 001a CDBF      		out __SP_L__,r28
 1387               	/* prologue: function */
 1388               	/* frame size = 44 */
 1389               	/* stack size = 50 */
 1390               	.L__stack_usage = 50
 478:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	uint8_t ErrorCode;
 479:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 480:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1391               		.loc 1 480 0
 1392 001c 2091 0000 		lds r18,USB_DeviceState
 1393 0020 2430      		cpi r18,lo8(4)
 1394 0022 01F0      		breq .+2
 1395 0024 00C0      		rjmp .L92
 1396               		.loc 1 480 0 is_stmt 0 discriminator 1
 1397 0026 FC01      		movw r30,r24
 1398 0028 258D      		ldd r18,Z+29
 1399 002a 2230      		cpi r18,lo8(2)
 1400 002c 01F0      		breq .+2
 1401 002e 00C0      		rjmp .L92
 1402 0030 8A01      		movw r16,r20
 1403 0032 7B01      		movw r14,r22
 1404               	.LVL95:
 1405               	.LBB97:
 1406               	.LBB98:
 270:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1407               		.loc 2 270 0 is_stmt 1
 1408 0034 8181      		ldd r24,Z+1
 1409               	.LVL96:
 1410 0036 8F70      		andi r24,lo8(15)
 1411               	.LVL97:
 1412 0038 8093 E900 		sts 233,r24
 1413               	.LVL98:
 1414               	.LBE98:
 1415               	.LBE97:
 481:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 482:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 483:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 484:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 485:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 486:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpoint.Address);
 487:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 488:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 1416               		.loc 1 488 0
 1417 003c 0E94 0000 		call Endpoint_WaitUntilReady
 1418               	.LVL99:
 1419 0040 8111      		cpse r24,__zero_reg__
 1420 0042 00C0      		rjmp .L90
 489:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return ErrorCode;
 490:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 491:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 492:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 493:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1421               		.loc 1 493 0
 1422 0044 CE01      		movw r24,r28
 1423               	.LVL100:
 1424 0046 0196      		adiw r24,1
 1425 0048 2CE2      		ldi r18,lo8(44)
 1426 004a FC01      		movw r30,r24
 1427               		0:
 1428 004c 1192      		st Z+,__zero_reg__
 1429 004e 2A95      		dec r18
 1430 0050 01F4      		brne 0b
 494:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 495:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageType   = CPU_TO_LE32(REMOTE_NDIS_PACKET_MSG);
 1431               		.loc 1 495 0
 1432 0052 41E0      		ldi r20,lo8(1)
 1433 0054 50E0      		ldi r21,0
 1434 0056 60E0      		ldi r22,0
 1435 0058 70E0      		ldi r23,0
 1436 005a 4983      		std Y+1,r20
 1437 005c 5A83      		std Y+2,r21
 1438 005e 6B83      		std Y+3,r22
 1439 0060 7C83      		std Y+4,r23
 496:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageLength = cpu_to_le32(sizeof(RNDIS_Packet_Message_t) + PacketLength);
 1440               		.loc 1 496 0
 1441 0062 A801      		movw r20,r16
 1442 0064 445D      		subi r20,-44
 1443 0066 5F4F      		sbci r21,-1
 1444 0068 60E0      		ldi r22,0
 1445 006a 70E0      		ldi r23,0
 1446 006c 4D83      		std Y+5,r20
 1447 006e 5E83      		std Y+6,r21
 1448 0070 6F83      		std Y+7,r22
 1449 0072 7887      		std Y+8,r23
 497:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataOffset    = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Messag
 1450               		.loc 1 497 0
 1451 0074 44E2      		ldi r20,lo8(36)
 1452 0076 50E0      		ldi r21,0
 1453 0078 60E0      		ldi r22,0
 1454 007a 70E0      		ldi r23,0
 1455 007c 4987      		std Y+9,r20
 1456 007e 5A87      		std Y+10,r21
 1457 0080 6B87      		std Y+11,r22
 1458 0082 7C87      		std Y+12,r23
 498:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataLength    = cpu_to_le32(PacketLength);
 1459               		.loc 1 498 0
 1460 0084 A801      		movw r20,r16
 1461 0086 60E0      		ldi r22,0
 1462 0088 70E0      		ldi r23,0
 1463 008a 4D87      		std Y+13,r20
 1464 008c 5E87      		std Y+14,r21
 1465 008e 6F87      		std Y+15,r22
 1466 0090 788B      		std Y+16,r23
 499:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 500:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1467               		.loc 1 500 0
 1468 0092 40E0      		ldi r20,0
 1469 0094 50E0      		ldi r21,0
 1470 0096 6CE2      		ldi r22,lo8(44)
 1471 0098 70E0      		ldi r23,0
 1472 009a 0E94 0000 		call Endpoint_Write_Stream_LE
 1473               	.LVL101:
 501:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(Buffer, PacketLength, NULL);
 1474               		.loc 1 501 0
 1475 009e 40E0      		ldi r20,0
 1476 00a0 50E0      		ldi r21,0
 1477 00a2 B801      		movw r22,r16
 1478 00a4 C701      		movw r24,r14
 1479 00a6 0E94 0000 		call Endpoint_Write_Stream_LE
 1480               	.LVL102:
 1481               	.LBB99:
 1482               	.LBB100:
 456:lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1483               		.loc 2 456 0
 1484 00aa 8091 E800 		lds r24,232
 1485 00ae 8E77      		andi r24,lo8(126)
 1486 00b0 8093 E800 		sts 232,r24
 1487               	.LBE100:
 1488               	.LBE99:
 502:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearIN();
 503:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 504:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1489               		.loc 1 504 0
 1490 00b4 80E0      		ldi r24,0
 1491 00b6 00C0      		rjmp .L90
 1492               	.LVL103:
 1493               	.L92:
 483:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 1494               		.loc 1 483 0
 1495 00b8 82E0      		ldi r24,lo8(2)
 1496               	.LVL104:
 1497               	.L90:
 1498               	/* epilogue start */
 505:lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1499               		.loc 1 505 0
 1500 00ba AC96      		adiw r28,44
 1501 00bc 0FB6      		in __tmp_reg__,__SREG__
 1502 00be F894      		cli
 1503 00c0 DEBF      		out __SP_H__,r29
 1504 00c2 0FBE      		out __SREG__,__tmp_reg__
 1505 00c4 CDBF      		out __SP_L__,r28
 1506 00c6 DF91      		pop r29
 1507 00c8 CF91      		pop r28
 1508 00ca 1F91      		pop r17
 1509 00cc 0F91      		pop r16
 1510 00ce FF90      		pop r15
 1511 00d0 EF90      		pop r14
 1512 00d2 0895      		ret
 1513               		.cfi_endproc
 1514               	.LFE108:
 1516               		.section	.progmem.data.AdapterSupportedOIDList,"a",@progbits
 1519               	AdapterSupportedOIDList:
 1520 0000 01        		.byte	1
 1521 0001 01        		.byte	1
 1522 0002 01        		.byte	1
 1523 0003 00        		.byte	0
 1524 0004 02        		.byte	2
 1525 0005 02        		.byte	2
 1526 0006 01        		.byte	1
 1527 0007 00        		.byte	0
 1528 0008 02        		.byte	2
 1529 0009 01        		.byte	1
 1530 000a 01        		.byte	1
 1531 000b 00        		.byte	0
 1532 000c 03        		.byte	3
 1533 000d 01        		.byte	1
 1534 000e 01        		.byte	1
 1535 000f 00        		.byte	0
 1536 0010 04        		.byte	4
 1537 0011 01        		.byte	1
 1538 0012 01        		.byte	1
 1539 0013 00        		.byte	0
 1540 0014 06        		.byte	6
 1541 0015 01        		.byte	1
 1542 0016 01        		.byte	1
 1543 0017 00        		.byte	0
 1544 0018 11        		.byte	17
 1545 0019 01        		.byte	1
 1546 001a 01        		.byte	1
 1547 001b 00        		.byte	0
 1548 001c 07        		.byte	7
 1549 001d 01        		.byte	1
 1550 001e 01        		.byte	1
 1551 001f 00        		.byte	0
 1552 0020 0A        		.byte	10
 1553 0021 01        		.byte	1
 1554 0022 01        		.byte	1
 1555 0023 00        		.byte	0
 1556 0024 0B        		.byte	11
 1557 0025 01        		.byte	1
 1558 0026 01        		.byte	1
 1559 0027 00        		.byte	0
 1560 0028 0C        		.byte	12
 1561 0029 01        		.byte	1
 1562 002a 01        		.byte	1
 1563 002b 00        		.byte	0
 1564 002c 0D        		.byte	13
 1565 002d 01        		.byte	1
 1566 002e 01        		.byte	1
 1567 002f 00        		.byte	0
 1568 0030 0E        		.byte	14
 1569 0031 01        		.byte	1
 1570 0032 01        		.byte	1
 1571 0033 00        		.byte	0
 1572 0034 11        		.byte	17
 1573 0035 01        		.byte	1
 1574 0036 01        		.byte	1
 1575 0037 00        		.byte	0
 1576 0038 14        		.byte	20
 1577 0039 01        		.byte	1
 1578 003a 01        		.byte	1
 1579 003b 00        		.byte	0
 1580 003c 01        		.byte	1
 1581 003d 01        		.byte	1
 1582 003e 02        		.byte	2
 1583 003f 00        		.byte	0
 1584 0040 02        		.byte	2
 1585 0041 01        		.byte	1
 1586 0042 02        		.byte	2
 1587 0043 00        		.byte	0
 1588 0044 03        		.byte	3
 1589 0045 01        		.byte	1
 1590 0046 02        		.byte	2
 1591 0047 00        		.byte	0
 1592 0048 04        		.byte	4
 1593 0049 01        		.byte	1
 1594 004a 02        		.byte	2
 1595 004b 00        		.byte	0
 1596 004c 05        		.byte	5
 1597 004d 01        		.byte	1
 1598 004e 02        		.byte	2
 1599 004f 00        		.byte	0
 1600 0050 01        		.byte	1
 1601 0051 01        		.byte	1
 1602 0052 01        		.byte	1
 1603 0053 01        		.byte	1
 1604 0054 02        		.byte	2
 1605 0055 01        		.byte	1
 1606 0056 01        		.byte	1
 1607 0057 01        		.byte	1
 1608 0058 03        		.byte	3
 1609 0059 01        		.byte	1
 1610 005a 01        		.byte	1
 1611 005b 01        		.byte	1
 1612 005c 04        		.byte	4
 1613 005d 01        		.byte	1
 1614 005e 01        		.byte	1
 1615 005f 01        		.byte	1
 1616 0060 01        		.byte	1
 1617 0061 01        		.byte	1
 1618 0062 02        		.byte	2
 1619 0063 01        		.byte	1
 1620 0064 02        		.byte	2
 1621 0065 01        		.byte	1
 1622 0066 02        		.byte	2
 1623 0067 01        		.byte	1
 1624 0068 03        		.byte	3
 1625 0069 01        		.byte	1
 1626 006a 02        		.byte	2
 1627 006b 01        		.byte	1
 1628               		.text
 1629               	.Letext0:
 1630               		.file 3 "d:\\program files\\msys2\\home\\bnguy\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdin
 1631               		.file 4 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../Endpoint.h"
 1632               		.file 5 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../Device.h"
 1633               		.file 6 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../StdRequestType.h"
 1634               		.file 7 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../EndpointStream.h"
 1635               		.file 8 "lib/lufa/LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 1636               		.file 9 "lib/lufa/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.h"
 1637               		.file 10 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h"
 1638               		.file 11 "d:\\program files\\msys2\\home\\bnguy\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\avr\
 1639               		.file 12 "lib/lufa/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/EndpointStream_AVR8.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RNDISClassDevice.c
D:\Program Files\msys2\tmp\cckFRkNE.s:2      *ABS*:0000003e __SP_H__
D:\Program Files\msys2\tmp\cckFRkNE.s:3      *ABS*:0000003d __SP_L__
D:\Program Files\msys2\tmp\cckFRkNE.s:4      *ABS*:0000003f __SREG__
D:\Program Files\msys2\tmp\cckFRkNE.s:5      *ABS*:00000000 __tmp_reg__
D:\Program Files\msys2\tmp\cckFRkNE.s:6      *ABS*:00000001 __zero_reg__
D:\Program Files\msys2\tmp\cckFRkNE.s:13     .text.RNDIS_Device_ProcessControlRequest:00000000 RNDIS_Device_ProcessControlRequest
D:\Program Files\msys2\tmp\cckFRkNE.s:1519   .progmem.data.AdapterSupportedOIDList:00000000 AdapterSupportedOIDList
D:\Program Files\msys2\tmp\cckFRkNE.s:915    .text.RNDIS_Device_ConfigureEndpoints:00000000 RNDIS_Device_ConfigureEndpoints
D:\Program Files\msys2\tmp\cckFRkNE.s:1011   .text.RNDIS_Device_USBTask:00000000 RNDIS_Device_USBTask
D:\Program Files\msys2\tmp\cckFRkNE.s:1132   .text.RNDIS_Device_IsPacketReceived:00000000 RNDIS_Device_IsPacketReceived
D:\Program Files\msys2\tmp\cckFRkNE.s:1183   .text.RNDIS_Device_ReadPacket:00000000 RNDIS_Device_ReadPacket
D:\Program Files\msys2\tmp\cckFRkNE.s:1346   .text.RNDIS_Device_SendPacket:00000000 RNDIS_Device_SendPacket

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_ConfigureEndpointTable
USB_DeviceState
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
Endpoint_WaitUntilReady
__do_copy_data
