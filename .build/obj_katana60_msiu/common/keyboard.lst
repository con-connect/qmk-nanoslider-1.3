   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB4:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "backlight.h"
  33:tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  35:tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  36:tmk_core/common/keyboard.c **** #else
  37:tmk_core/common/keyboard.c **** #   include "magic.h"
  38:tmk_core/common/keyboard.c **** #endif
  39:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  40:tmk_core/common/keyboard.c **** #   include "mousekey.h"
  41:tmk_core/common/keyboard.c **** #endif
  42:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  43:tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  44:tmk_core/common/keyboard.c **** #endif
  45:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  46:tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  47:tmk_core/common/keyboard.c **** #endif
  48:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  49:tmk_core/common/keyboard.c **** #   include "adb.h"
  50:tmk_core/common/keyboard.c **** #endif
  51:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  52:tmk_core/common/keyboard.c **** #   include "rgblight.h"
  53:tmk_core/common/keyboard.c **** #endif
  54:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  55:tmk_core/common/keyboard.c **** #   include "process_steno.h"
  56:tmk_core/common/keyboard.c **** #endif
  57:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  58:tmk_core/common/keyboard.c **** #   include "fauxclicky.h"
  59:tmk_core/common/keyboard.c **** #endif
  60:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  61:tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  62:tmk_core/common/keyboard.c **** #endif
  63:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  64:tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  65:tmk_core/common/keyboard.c **** #endif
  66:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  67:tmk_core/common/keyboard.c **** #   include "pointing_device.h"
  68:tmk_core/common/keyboard.c **** #endif
  69:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  70:tmk_core/common/keyboard.c **** #   include "process_midi.h"
  71:tmk_core/common/keyboard.c **** #endif
  72:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  73:tmk_core/common/keyboard.c **** #   include "hd44780.h"
  74:tmk_core/common/keyboard.c **** #endif
  75:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  76:tmk_core/common/keyboard.c **** #   include "qwiic.h"
  77:tmk_core/common/keyboard.c **** #endif
  78:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  79:tmk_core/common/keyboard.c ****     #include "oled_driver.h"
  80:tmk_core/common/keyboard.c **** #endif
  81:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  82:tmk_core/common/keyboard.c ****   #include "velocikey.h"
  83:tmk_core/common/keyboard.c **** #endif
  84:tmk_core/common/keyboard.c **** 
  85:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  86:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
  87:tmk_core/common/keyboard.c **** static matrix_row_t get_real_keys(uint8_t row, matrix_row_t rowdata){
  88:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
  89:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
  90:tmk_core/common/keyboard.c ****         //read each key in the row data and check if the keymap defines it as a real key
  91:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1<<col))){
  92:tmk_core/common/keyboard.c ****             //this creates new row data, if a key is defined in the keymap, it will be set here
  93:tmk_core/common/keyboard.c ****             out |= 1<<col;
  94:tmk_core/common/keyboard.c ****         }
  95:tmk_core/common/keyboard.c ****     }
  96:tmk_core/common/keyboard.c ****     return out;
  97:tmk_core/common/keyboard.c **** }
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata)
 100:tmk_core/common/keyboard.c **** {
 101:tmk_core/common/keyboard.c ****     rowdata &= rowdata-1; //if there are less than two bits (keys) set, rowdata will become zero
 102:tmk_core/common/keyboard.c ****     return rowdata;
 103:tmk_core/common/keyboard.c **** }
 104:tmk_core/common/keyboard.c **** 
 105:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata)
 106:tmk_core/common/keyboard.c **** {
 107:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 108:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 109:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 110:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 111:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 112:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0){
 113:tmk_core/common/keyboard.c ****         return false;
 114:tmk_core/common/keyboard.c ****     }
 115:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 116:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 117:tmk_core/common/keyboard.c ****     so they are filtered out.
 118:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 119:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 120:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 121:tmk_core/common/keyboard.c ****     */
 122:tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 123:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)){
 124:tmk_core/common/keyboard.c ****             return true;
 125:tmk_core/common/keyboard.c ****         }
 126:tmk_core/common/keyboard.c ****     }
 127:tmk_core/common/keyboard.c ****     return false;
 128:tmk_core/common/keyboard.c **** }
 129:tmk_core/common/keyboard.c **** 
 130:tmk_core/common/keyboard.c **** #endif
 131:tmk_core/common/keyboard.c **** 
 132:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 132 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 133:tmk_core/common/keyboard.c **** // To use PORTF disable JTAG with writing JTD bit twice within four cycles.
 134:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__) || defined(__AVR_ATmega32U4__))
 135:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 135 0
  23 0000 85B7      		in r24,0x35
  24 0002 8068      		ori r24,lo8(-128)
  25 0004 85BF      		out 0x35,r24
 136:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  26               		.loc 1 136 0
  27 0006 85B7      		in r24,0x35
  28 0008 8068      		ori r24,lo8(-128)
  29 000a 85BF      		out 0x35,r24
  30               	/* epilogue start */
 137:tmk_core/common/keyboard.c **** #endif
 138:tmk_core/common/keyboard.c **** }
  31               		.loc 1 138 0
  32 000c 0895      		ret
  33               		.cfi_endproc
  34               	.LFE4:
  36               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  37               		.weak	keyboard_pre_init_user
  39               	keyboard_pre_init_user:
  40               	.LFB6:
 139:tmk_core/common/keyboard.c **** 
 140:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 141:tmk_core/common/keyboard.c ****  *
 142:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 143:tmk_core/common/keyboard.c ****  */
 144:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 145:tmk_core/common/keyboard.c **** void matrix_setup(void) {
 146:tmk_core/common/keyboard.c **** }
 147:tmk_core/common/keyboard.c **** 
 148:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 149:tmk_core/common/keyboard.c ****  *
 150:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 151:tmk_core/common/keyboard.c ****  */
 152:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 153:tmk_core/common/keyboard.c **** void keyboard_pre_init_user(void) { }
  41               		.loc 1 153 0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  47               	/* epilogue start */
  48               		.loc 1 153 0
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE6:
  53               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  54               		.section	.text.matrix_setup,"ax",@progbits
  55               		.weak	matrix_setup
  57               	matrix_setup:
  58               	.LFB18:
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  64               	/* epilogue start */
  65 0000 0895      		ret
  66               		.cfi_endproc
  67               	.LFE18:
  69               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  70               		.weak	keyboard_pre_init_kb
  72               	keyboard_pre_init_kb:
  73               	.LFB7:
 154:tmk_core/common/keyboard.c **** 
 155:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 156:tmk_core/common/keyboard.c ****  *
 157:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 158:tmk_core/common/keyboard.c ****  */
 159:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 160:tmk_core/common/keyboard.c **** void keyboard_pre_init_kb(void) {
  74               		.loc 1 160 0
  75               		.cfi_startproc
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
 161:tmk_core/common/keyboard.c ****   keyboard_pre_init_user();
  80               		.loc 1 161 0
  81 0000 0C94 0000 		jmp keyboard_pre_init_user
  82               	.LVL0:
  83               		.cfi_endproc
  84               	.LFE7:
  86               		.section	.text.keyboard_post_init_user,"ax",@progbits
  87               		.weak	keyboard_post_init_user
  89               	keyboard_post_init_user:
  90               	.LFB16:
  91               		.cfi_startproc
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 0 */
  95               	.L__stack_usage = 0
  96               	/* epilogue start */
  97 0000 0895      		ret
  98               		.cfi_endproc
  99               	.LFE16:
 101               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 102               		.weak	keyboard_post_init_kb
 104               	keyboard_post_init_kb:
 105               	.LFB9:
 162:tmk_core/common/keyboard.c **** }
 163:tmk_core/common/keyboard.c **** 
 164:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 165:tmk_core/common/keyboard.c ****  *
 166:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 167:tmk_core/common/keyboard.c ****  */
 168:tmk_core/common/keyboard.c **** 
 169:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 170:tmk_core/common/keyboard.c **** void keyboard_post_init_user() {}
 171:tmk_core/common/keyboard.c **** 
 172:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 173:tmk_core/common/keyboard.c ****  *
 174:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 175:tmk_core/common/keyboard.c ****  */
 176:tmk_core/common/keyboard.c **** 
 177:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 178:tmk_core/common/keyboard.c **** void keyboard_post_init_kb(void) {
 106               		.loc 1 178 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 179:tmk_core/common/keyboard.c ****   keyboard_post_init_user();
 112               		.loc 1 179 0
 113 0000 0C94 0000 		jmp keyboard_post_init_user
 114               	.LVL1:
 115               		.cfi_endproc
 116               	.LFE9:
 118               		.section	.text.keyboard_setup,"ax",@progbits
 119               	.global	keyboard_setup
 121               	keyboard_setup:
 122               	.LFB10:
 180:tmk_core/common/keyboard.c **** }
 181:tmk_core/common/keyboard.c **** 
 182:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 183:tmk_core/common/keyboard.c ****  *
 184:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 185:tmk_core/common/keyboard.c ****  */
 186:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 123               		.loc 1 186 0
 124               		.cfi_startproc
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
 187:tmk_core/common/keyboard.c ****     disable_jtag();
 129               		.loc 1 187 0
 130 0000 0E94 0000 		call disable_jtag
 131               	.LVL2:
 188:tmk_core/common/keyboard.c ****     matrix_setup();
 132               		.loc 1 188 0
 133 0004 0E94 0000 		call matrix_setup
 134               	.LVL3:
 189:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 135               		.loc 1 189 0
 136 0008 0C94 0000 		jmp keyboard_pre_init_kb
 137               	.LVL4:
 138               		.cfi_endproc
 139               	.LFE10:
 141               		.section	.text.is_keyboard_master,"ax",@progbits
 142               		.weak	is_keyboard_master
 144               	is_keyboard_master:
 145               	.LFB11:
 190:tmk_core/common/keyboard.c **** }
 191:tmk_core/common/keyboard.c **** 
 192:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 193:tmk_core/common/keyboard.c ****  *
 194:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 195:tmk_core/common/keyboard.c ****  */
 196:tmk_core/common/keyboard.c **** __attribute__((weak))
 197:tmk_core/common/keyboard.c **** bool is_keyboard_master(void) {
 146               		.loc 1 197 0
 147               		.cfi_startproc
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 0 */
 151               	.L__stack_usage = 0
 198:tmk_core/common/keyboard.c ****     return true;
 199:tmk_core/common/keyboard.c **** }
 152               		.loc 1 199 0
 153 0000 81E0      		ldi r24,lo8(1)
 154               	/* epilogue start */
 155 0002 0895      		ret
 156               		.cfi_endproc
 157               	.LFE11:
 159               		.section	.text.keyboard_init,"ax",@progbits
 160               	.global	keyboard_init
 162               	keyboard_init:
 163               	.LFB12:
 200:tmk_core/common/keyboard.c **** 
 201:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 202:tmk_core/common/keyboard.c ****  *
 203:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 204:tmk_core/common/keyboard.c ****  */
 205:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 164               		.loc 1 205 0
 165               		.cfi_startproc
 166               	/* prologue: function */
 167               	/* frame size = 0 */
 168               	/* stack size = 0 */
 169               	.L__stack_usage = 0
 206:tmk_core/common/keyboard.c ****     timer_init();
 170               		.loc 1 206 0
 171 0000 0E94 0000 		call timer_init
 172               	.LVL5:
 207:tmk_core/common/keyboard.c ****     matrix_init();
 173               		.loc 1 207 0
 174 0004 0E94 0000 		call matrix_init
 175               	.LVL6:
 208:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 209:tmk_core/common/keyboard.c ****     qwiic_init();
 210:tmk_core/common/keyboard.c **** #endif
 211:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 212:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 213:tmk_core/common/keyboard.c **** #endif
 214:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 215:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 216:tmk_core/common/keyboard.c **** #endif
 217:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 218:tmk_core/common/keyboard.c ****     serial_mouse_init();
 219:tmk_core/common/keyboard.c **** #endif
 220:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 221:tmk_core/common/keyboard.c ****     adb_mouse_init();
 222:tmk_core/common/keyboard.c **** #endif
 223:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 224:tmk_core/common/keyboard.c ****     bootmagic();
 225:tmk_core/common/keyboard.c **** #else
 226:tmk_core/common/keyboard.c ****     magic();
 176               		.loc 1 226 0
 177 0008 0E94 0000 		call magic
 178               	.LVL7:
 227:tmk_core/common/keyboard.c **** #endif
 228:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 229:tmk_core/common/keyboard.c ****     backlight_init();
 230:tmk_core/common/keyboard.c **** #endif
 231:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 232:tmk_core/common/keyboard.c ****     rgblight_init();
 233:tmk_core/common/keyboard.c **** #endif
 234:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 235:tmk_core/common/keyboard.c ****     steno_init();
 236:tmk_core/common/keyboard.c **** #endif
 237:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 238:tmk_core/common/keyboard.c ****     fauxclicky_init();
 239:tmk_core/common/keyboard.c **** #endif
 240:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 241:tmk_core/common/keyboard.c ****     pointing_device_init();
 242:tmk_core/common/keyboard.c **** #endif
 243:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 244:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 245:tmk_core/common/keyboard.c **** #endif
 246:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 179               		.loc 1 246 0
 180 000c 0C94 0000 		jmp keyboard_post_init_kb
 181               	.LVL8:
 182               		.cfi_endproc
 183               	.LFE12:
 185               		.section	.text.keyboard_set_leds,"ax",@progbits
 186               	.global	keyboard_set_leds
 188               	keyboard_set_leds:
 189               	.LFB14:
 247:tmk_core/common/keyboard.c **** }
 248:tmk_core/common/keyboard.c **** 
 249:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 250:tmk_core/common/keyboard.c ****  *
 251:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 252:tmk_core/common/keyboard.c ****  *
 253:tmk_core/common/keyboard.c ****  * * scan matrix
 254:tmk_core/common/keyboard.c ****  * * handle mouse movements
 255:tmk_core/common/keyboard.c ****  * * run visualizer code
 256:tmk_core/common/keyboard.c ****  * * handle midi commands
 257:tmk_core/common/keyboard.c ****  * * light LEDs
 258:tmk_core/common/keyboard.c ****  *
 259:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 260:tmk_core/common/keyboard.c ****  */
 261:tmk_core/common/keyboard.c **** void keyboard_task(void)
 262:tmk_core/common/keyboard.c **** {
 263:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 264:tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 265:tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 266:tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 267:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 268:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 269:tmk_core/common/keyboard.c **** #endif
 270:tmk_core/common/keyboard.c **** 
 271:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 272:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 273:tmk_core/common/keyboard.c **** #else
 274:tmk_core/common/keyboard.c ****     matrix_scan();
 275:tmk_core/common/keyboard.c **** #endif
 276:tmk_core/common/keyboard.c **** 
 277:tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 278:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 279:tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 280:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 281:tmk_core/common/keyboard.c ****             if (matrix_change) {
 282:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 283:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) { continue; }
 284:tmk_core/common/keyboard.c **** #endif
 285:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 286:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 287:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 288:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 289:tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 290:tmk_core/common/keyboard.c ****                             .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 291:tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 292:tmk_core/common/keyboard.c ****                         });
 293:tmk_core/common/keyboard.c ****                         // record a processed key
 294:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1<<c);
 295:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 296:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 297:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 298:tmk_core/common/keyboard.c **** #endif
 299:tmk_core/common/keyboard.c ****                         // process a key per task call
 300:tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 301:tmk_core/common/keyboard.c ****                     }
 302:tmk_core/common/keyboard.c ****                 }
 303:tmk_core/common/keyboard.c ****             }
 304:tmk_core/common/keyboard.c ****         }
 305:tmk_core/common/keyboard.c ****     }
 306:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 307:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 308:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 309:tmk_core/common/keyboard.c ****     if (!keys_processed)
 310:tmk_core/common/keyboard.c **** #endif
 311:tmk_core/common/keyboard.c ****     action_exec(TICK);
 312:tmk_core/common/keyboard.c **** 
 313:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 314:tmk_core/common/keyboard.c **** 
 315:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 316:tmk_core/common/keyboard.c ****     qwiic_task();
 317:tmk_core/common/keyboard.c **** #endif
 318:tmk_core/common/keyboard.c **** 
 319:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 320:tmk_core/common/keyboard.c ****     oled_task();
 321:tmk_core/common/keyboard.c **** #ifndef OLED_DISABLE_TIMEOUT
 322:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 323:tmk_core/common/keyboard.c ****     if (ret)
 324:tmk_core/common/keyboard.c ****         oled_on();
 325:tmk_core/common/keyboard.c **** #endif
 326:tmk_core/common/keyboard.c **** #endif
 327:tmk_core/common/keyboard.c **** 
 328:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 329:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 330:tmk_core/common/keyboard.c ****     mousekey_task();
 331:tmk_core/common/keyboard.c **** #endif
 332:tmk_core/common/keyboard.c **** 
 333:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 334:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 335:tmk_core/common/keyboard.c **** #endif
 336:tmk_core/common/keyboard.c **** 
 337:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 338:tmk_core/common/keyboard.c ****     serial_mouse_task();
 339:tmk_core/common/keyboard.c **** #endif
 340:tmk_core/common/keyboard.c **** 
 341:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 342:tmk_core/common/keyboard.c ****     adb_mouse_task();
 343:tmk_core/common/keyboard.c **** #endif
 344:tmk_core/common/keyboard.c **** 
 345:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 346:tmk_core/common/keyboard.c **** 	serial_link_update();
 347:tmk_core/common/keyboard.c **** #endif
 348:tmk_core/common/keyboard.c **** 
 349:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 350:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 351:tmk_core/common/keyboard.c **** #endif
 352:tmk_core/common/keyboard.c **** 
 353:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 354:tmk_core/common/keyboard.c ****     pointing_device_task();
 355:tmk_core/common/keyboard.c **** #endif
 356:tmk_core/common/keyboard.c **** 
 357:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 358:tmk_core/common/keyboard.c ****     midi_task();
 359:tmk_core/common/keyboard.c **** #endif
 360:tmk_core/common/keyboard.c **** 
 361:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 362:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) { velocikey_decelerate();  }
 363:tmk_core/common/keyboard.c **** #endif
 364:tmk_core/common/keyboard.c **** 
 365:tmk_core/common/keyboard.c ****     // update LED
 366:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 367:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 368:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 369:tmk_core/common/keyboard.c ****     }
 370:tmk_core/common/keyboard.c **** }
 371:tmk_core/common/keyboard.c **** 
 372:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 373:tmk_core/common/keyboard.c ****  *
 374:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 375:tmk_core/common/keyboard.c ****  */
 376:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 377:tmk_core/common/keyboard.c **** {
 190               		.loc 1 377 0
 191               		.cfi_startproc
 192               	.LVL9:
 193 0000 CF93      		push r28
 194               	.LCFI0:
 195               		.cfi_def_cfa_offset 3
 196               		.cfi_offset 28, -2
 197               	/* prologue: function */
 198               	/* frame size = 0 */
 199               	/* stack size = 1 */
 200               	.L__stack_usage = 1
 201 0002 C82F      		mov r28,r24
 378:tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 202               		.loc 1 378 0
 203 0004 8091 0000 		lds r24,debug_config
 204               	.LVL10:
 205 0008 82FF      		sbrs r24,2
 206 000a 00C0      		rjmp .L12
 207               		.loc 1 378 0 is_stmt 0 discriminator 1
 208 000c 80FF      		sbrs r24,0
 209 000e 00C0      		rjmp .L13
 210               		.loc 1 378 0 discriminator 2
 211 0010 80E0      		ldi r24,lo8(__c.2866)
 212 0012 90E0      		ldi r25,hi8(__c.2866)
 213 0014 0E94 0000 		call xputs
 214               	.LVL11:
 215               	.L13:
 216               		.loc 1 378 0 discriminator 4
 217 0018 8091 0000 		lds r24,debug_config
 218 001c 80FF      		sbrs r24,0
 219 001e 00C0      		rjmp .L14
 220               		.loc 1 378 0 discriminator 5
 221 0020 1F92      		push __zero_reg__
 222               	.LCFI1:
 223               		.cfi_def_cfa_offset 4
 224 0022 CF93      		push r28
 225               	.LCFI2:
 226               		.cfi_def_cfa_offset 5
 227 0024 80E0      		ldi r24,lo8(__c.2868)
 228 0026 90E0      		ldi r25,hi8(__c.2868)
 229 0028 9F93      		push r25
 230               	.LCFI3:
 231               		.cfi_def_cfa_offset 6
 232 002a 8F93      		push r24
 233               	.LCFI4:
 234               		.cfi_def_cfa_offset 7
 235 002c 0E94 0000 		call __xprintf
 236               	.LVL12:
 237 0030 0F90      		pop __tmp_reg__
 238 0032 0F90      		pop __tmp_reg__
 239 0034 0F90      		pop __tmp_reg__
 240 0036 0F90      		pop __tmp_reg__
 241               	.LCFI5:
 242               		.cfi_def_cfa_offset 3
 243               	.L14:
 244               		.loc 1 378 0 discriminator 7
 245 0038 8091 0000 		lds r24,debug_config
 246 003c 80FF      		sbrs r24,0
 247 003e 00C0      		rjmp .L12
 248               		.loc 1 378 0 discriminator 8
 249 0040 80E0      		ldi r24,lo8(__c.2870)
 250 0042 90E0      		ldi r25,hi8(__c.2870)
 251 0044 0E94 0000 		call xputs
 252               	.LVL13:
 253               	.L12:
 379:tmk_core/common/keyboard.c ****     led_set(leds);
 254               		.loc 1 379 0 is_stmt 1
 255 0048 8C2F      		mov r24,r28
 256               	/* epilogue start */
 380:tmk_core/common/keyboard.c **** }
 257               		.loc 1 380 0
 258 004a CF91      		pop r28
 259               	.LVL14:
 379:tmk_core/common/keyboard.c ****     led_set(leds);
 260               		.loc 1 379 0
 261 004c 0C94 0000 		jmp led_set
 262               	.LVL15:
 263               		.cfi_endproc
 264               	.LFE14:
 266               		.section	.text.keyboard_task,"ax",@progbits
 267               	.global	keyboard_task
 269               	keyboard_task:
 270               	.LFB13:
 262:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 271               		.loc 1 262 0
 272               		.cfi_startproc
 273 0000 5F92      		push r5
 274               	.LCFI6:
 275               		.cfi_def_cfa_offset 3
 276               		.cfi_offset 5, -2
 277 0002 6F92      		push r6
 278               	.LCFI7:
 279               		.cfi_def_cfa_offset 4
 280               		.cfi_offset 6, -3
 281 0004 7F92      		push r7
 282               	.LCFI8:
 283               		.cfi_def_cfa_offset 5
 284               		.cfi_offset 7, -4
 285 0006 8F92      		push r8
 286               	.LCFI9:
 287               		.cfi_def_cfa_offset 6
 288               		.cfi_offset 8, -5
 289 0008 9F92      		push r9
 290               	.LCFI10:
 291               		.cfi_def_cfa_offset 7
 292               		.cfi_offset 9, -6
 293 000a AF92      		push r10
 294               	.LCFI11:
 295               		.cfi_def_cfa_offset 8
 296               		.cfi_offset 10, -7
 297 000c BF92      		push r11
 298               	.LCFI12:
 299               		.cfi_def_cfa_offset 9
 300               		.cfi_offset 11, -8
 301 000e CF92      		push r12
 302               	.LCFI13:
 303               		.cfi_def_cfa_offset 10
 304               		.cfi_offset 12, -9
 305 0010 DF92      		push r13
 306               	.LCFI14:
 307               		.cfi_def_cfa_offset 11
 308               		.cfi_offset 13, -10
 309 0012 EF92      		push r14
 310               	.LCFI15:
 311               		.cfi_def_cfa_offset 12
 312               		.cfi_offset 14, -11
 313 0014 FF92      		push r15
 314               	.LCFI16:
 315               		.cfi_def_cfa_offset 13
 316               		.cfi_offset 15, -12
 317 0016 0F93      		push r16
 318               	.LCFI17:
 319               		.cfi_def_cfa_offset 14
 320               		.cfi_offset 16, -13
 321 0018 1F93      		push r17
 322               	.LCFI18:
 323               		.cfi_def_cfa_offset 15
 324               		.cfi_offset 17, -14
 325 001a CF93      		push r28
 326               	.LCFI19:
 327               		.cfi_def_cfa_offset 16
 328               		.cfi_offset 28, -15
 329 001c DF93      		push r29
 330               	.LCFI20:
 331               		.cfi_def_cfa_offset 17
 332               		.cfi_offset 29, -16
 333 001e CDB7      		in r28,__SP_L__
 334 0020 DEB7      		in r29,__SP_H__
 335               	.LCFI21:
 336               		.cfi_def_cfa_register 28
 337 0022 2A97      		sbiw r28,10
 338               	.LCFI22:
 339               		.cfi_def_cfa_offset 27
 340 0024 0FB6      		in __tmp_reg__,__SREG__
 341 0026 F894      		cli
 342 0028 DEBF      		out __SP_H__,r29
 343 002a 0FBE      		out __SREG__,__tmp_reg__
 344 002c CDBF      		out __SP_L__,r28
 345               	/* prologue: function */
 346               	/* frame size = 10 */
 347               	/* stack size = 25 */
 348               	.L__stack_usage = 25
 349               	.LVL16:
 274:tmk_core/common/keyboard.c **** #endif
 350               		.loc 1 274 0
 351 002e 0E94 0000 		call matrix_scan
 352               	.LVL17:
 277:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 353               		.loc 1 277 0
 354 0032 0E94 0000 		call is_keyboard_master
 355               	.LVL18:
 356 0036 8823      		tst r24
 357 0038 01F4      		brne .+2
 358 003a 00C0      		rjmp .L26
 359 003c 90E0      		ldi r25,lo8(matrix_prev.2846)
 360 003e A92E      		mov r10,r25
 361 0040 90E0      		ldi r25,hi8(matrix_prev.2846)
 362 0042 B92E      		mov r11,r25
 363 0044 10E0      		ldi r17,0
 364 0046 00E0      		ldi r16,0
 365               	.LBB2:
 366               	.LBB3:
 287:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 367               		.loc 1 287 0
 368 0048 8824      		clr r8
 369 004a 8394      		inc r8
 370 004c 912C      		mov r9,__zero_reg__
 371               	.LVL19:
 372               	.L33:
 373 004e 502E      		mov r5,r16
 374               	.LVL20:
 375               	.LBE3:
 279:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 376               		.loc 1 279 0
 377 0050 802F      		mov r24,r16
 378 0052 0E94 0000 		call matrix_get_row
 379               	.LVL21:
 380 0056 7C01      		movw r14,r24
 381               	.LVL22:
 280:tmk_core/common/keyboard.c ****             if (matrix_change) {
 382               		.loc 1 280 0
 383 0058 F501      		movw r30,r10
 384 005a C190      		ld r12,Z+
 385 005c D190      		ld r13,Z+
 386 005e 5F01      		movw r10,r30
 387               	.LVL23:
 281:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 388               		.loc 1 281 0
 389 0060 C816      		cp r12,r24
 390 0062 D906      		cpc r13,r25
 391 0064 01F4      		brne .+2
 392 0066 00C0      		rjmp .L27
 285:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 393               		.loc 1 285 0
 394 0068 8091 0000 		lds r24,debug_config
 395 006c 81FD      		sbrc r24,1
 285:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 396               		.loc 1 285 0 is_stmt 0 discriminator 1
 397 006e 0E94 0000 		call matrix_print
 398               	.LVL24:
 399               	.L28:
 400               	.LBE2:
 277:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 401               		.loc 1 277 0 is_stmt 1
 402 0072 90E0      		ldi r25,0
 403 0074 80E0      		ldi r24,0
 404               	.LBB6:
 280:tmk_core/common/keyboard.c ****             if (matrix_change) {
 405               		.loc 1 280 0
 406 0076 CE24      		eor r12,r14
 407               	.LVL25:
 408 0078 DF24      		eor r13,r15
 409               	.LVL26:
 410               	.L32:
 411               	.LBB4:
 287:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 412               		.loc 1 287 0
 413 007a 3401      		movw r6,r8
 414 007c 082E      		mov r0,r24
 415 007e 00C0      		rjmp 2f
 416               		1:
 417 0080 660C      		lsl r6
 418 0082 771C      		rol r7
 419               		2:
 420 0084 0A94      		dec r0
 421 0086 02F4      		brpl 1b
 422 0088 9601      		movw r18,r12
 423 008a 2621      		and r18,r6
 424 008c 3721      		and r19,r7
 425 008e 232B      		or r18,r19
 426 0090 01F4      		brne .+2
 427 0092 00C0      		rjmp .L29
 288:tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 428               		.loc 1 288 0
 429 0094 8E83      		std Y+6,r24
 430 0096 5F82      		std Y+7,r5
 290:tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 431               		.loc 1 290 0
 432 0098 E620      		and r14,r6
 433               	.LVL27:
 434 009a F720      		and r15,r7
 435 009c 81E0      		ldi r24,lo8(1)
 436               	.LVL28:
 437 009e EF28      		or r14,r15
 438 00a0 01F4      		brne .L30
 439 00a2 80E0      		ldi r24,0
 440               	.L30:
 288:tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 441               		.loc 1 288 0
 442 00a4 8887      		std Y+8,r24
 291:tmk_core/common/keyboard.c ****                         });
 443               		.loc 1 291 0
 444 00a6 0E94 0000 		call timer_read
 445               	.LVL29:
 446 00aa 8160      		ori r24,1
 288:tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 447               		.loc 1 288 0
 448 00ac 782F      		mov r23,r24
 449 00ae 9A87      		std Y+10,r25
 450 00b0 8987      		std Y+9,r24
 451 00b2 4E81      		ldd r20,Y+6
 452 00b4 5F81      		ldd r21,Y+7
 453 00b6 6885      		ldd r22,Y+8
 454 00b8 8A85      		ldd r24,Y+10
 455 00ba 0E94 0000 		call action_exec
 456               	.LVL30:
 294:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 457               		.loc 1 294 0
 458 00be 000F      		lsl r16
 459 00c0 111F      		rol r17
 460               	.LVL31:
 461 00c2 F801      		movw r30,r16
 462 00c4 E050      		subi r30,lo8(-(matrix_prev.2846))
 463 00c6 F040      		sbci r31,hi8(-(matrix_prev.2846))
 464 00c8 8081      		ld r24,Z
 465 00ca 9181      		ldd r25,Z+1
 466 00cc 6826      		eor r6,r24
 467 00ce 7926      		eor r7,r25
 468 00d0 7182      		std Z+1,r7
 469 00d2 6082      		st Z,r6
 470               	.L31:
 471               	.LBE4:
 472               	.LBE6:
 330:tmk_core/common/keyboard.c **** #endif
 473               		.loc 1 330 0
 474 00d4 0E94 0000 		call mousekey_task
 475               	.LVL32:
 366:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 476               		.loc 1 366 0
 477 00d8 0E94 0000 		call host_keyboard_leds
 478               	.LVL33:
 479 00dc 9091 0000 		lds r25,led_status.2847
 480 00e0 8917      		cp r24,r25
 481 00e2 01F0      		breq .L25
 367:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 482               		.loc 1 367 0
 483 00e4 0E94 0000 		call host_keyboard_leds
 484               	.LVL34:
 485 00e8 8093 0000 		sts led_status.2847,r24
 486               	/* epilogue start */
 370:tmk_core/common/keyboard.c **** 
 487               		.loc 1 370 0
 488 00ec 2A96      		adiw r28,10
 489 00ee 0FB6      		in __tmp_reg__,__SREG__
 490 00f0 F894      		cli
 491 00f2 DEBF      		out __SP_H__,r29
 492 00f4 0FBE      		out __SREG__,__tmp_reg__
 493 00f6 CDBF      		out __SP_L__,r28
 494 00f8 DF91      		pop r29
 495 00fa CF91      		pop r28
 496 00fc 1F91      		pop r17
 497 00fe 0F91      		pop r16
 498 0100 FF90      		pop r15
 499 0102 EF90      		pop r14
 500 0104 DF90      		pop r13
 501 0106 CF90      		pop r12
 502 0108 BF90      		pop r11
 503 010a AF90      		pop r10
 504 010c 9F90      		pop r9
 505 010e 8F90      		pop r8
 506 0110 7F90      		pop r7
 507 0112 6F90      		pop r6
 508 0114 5F90      		pop r5
 368:tmk_core/common/keyboard.c ****     }
 509               		.loc 1 368 0
 510 0116 0C94 0000 		jmp keyboard_set_leds
 511               	.LVL35:
 512               	.L29:
 513 011a 0196      		adiw r24,1
 514               	.LVL36:
 515               	.LBB7:
 516               	.LBB5:
 286:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 517               		.loc 1 286 0 discriminator 2
 518 011c 8F30      		cpi r24,15
 519 011e 9105      		cpc r25,__zero_reg__
 520 0120 01F0      		breq .+2
 521 0122 00C0      		rjmp .L32
 522               	.LVL37:
 523               	.L27:
 524 0124 0F5F      		subi r16,-1
 525 0126 1F4F      		sbci r17,-1
 526               	.LVL38:
 527               	.LBE5:
 278:tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 528               		.loc 1 278 0
 529 0128 0530      		cpi r16,5
 530 012a 1105      		cpc r17,__zero_reg__
 531 012c 01F0      		breq .+2
 532 012e 00C0      		rjmp .L33
 533               	.LVL39:
 534               	.L26:
 535               	.LBE7:
 311:tmk_core/common/keyboard.c **** 
 536               		.loc 1 311 0
 537 0130 8FEF      		ldi r24,lo8(-1)
 538 0132 8983      		std Y+1,r24
 539 0134 8A83      		std Y+2,r24
 540 0136 1B82      		std Y+3,__zero_reg__
 541 0138 0E94 0000 		call timer_read
 542               	.LVL40:
 543 013c 8160      		ori r24,1
 544 013e 782F      		mov r23,r24
 545 0140 9D83      		std Y+5,r25
 546 0142 8C83      		std Y+4,r24
 547 0144 4981      		ldd r20,Y+1
 548 0146 5A81      		ldd r21,Y+2
 549 0148 6B81      		ldd r22,Y+3
 550 014a 8D81      		ldd r24,Y+5
 551 014c 0E94 0000 		call action_exec
 552               	.LVL41:
 553 0150 00C0      		rjmp .L31
 554               	.L25:
 555               	/* epilogue start */
 370:tmk_core/common/keyboard.c **** 
 556               		.loc 1 370 0
 557 0152 2A96      		adiw r28,10
 558 0154 0FB6      		in __tmp_reg__,__SREG__
 559 0156 F894      		cli
 560 0158 DEBF      		out __SP_H__,r29
 561 015a 0FBE      		out __SREG__,__tmp_reg__
 562 015c CDBF      		out __SP_L__,r28
 563 015e DF91      		pop r29
 564 0160 CF91      		pop r28
 565 0162 1F91      		pop r17
 566 0164 0F91      		pop r16
 567 0166 FF90      		pop r15
 568 0168 EF90      		pop r14
 569 016a DF90      		pop r13
 570 016c CF90      		pop r12
 571 016e BF90      		pop r11
 572 0170 AF90      		pop r10
 573 0172 9F90      		pop r9
 574 0174 8F90      		pop r8
 575 0176 7F90      		pop r7
 576 0178 6F90      		pop r6
 577 017a 5F90      		pop r5
 578 017c 0895      		ret
 579               		.cfi_endproc
 580               	.LFE13:
 582               		.section	.progmem.data.__c.2870,"a",@progbits
 585               	__c.2870:
 586 0000 0A00      		.string	"\n"
 587               		.section	.progmem.data.__c.2868,"a",@progbits
 590               	__c.2868:
 591 0000 2530 3258 		.string	"%02X"
 591      00
 592               		.section	.progmem.data.__c.2866,"a",@progbits
 595               	__c.2866:
 596 0000 6B65 7962 		.string	"keyboard_set_led: "
 596      6F61 7264 
 596      5F73 6574 
 596      5F6C 6564 
 596      3A20 00
 597               		.section	.bss.led_status.2847,"aw",@nobits
 600               	led_status.2847:
 601 0000 00        		.zero	1
 602               		.section	.bss.matrix_prev.2846,"aw",@nobits
 605               	matrix_prev.2846:
 606 0000 0000 0000 		.zero	10
 606      0000 0000 
 606      0000 
 607               		.text
 608               	.Letext0:
 609               		.file 2 "/usr/local/Cellar/avr-gcc/7.2.0/avr/include/stdint.h"
 610               		.file 3 "tmk_core/common/keyboard.h"
 611               		.file 4 "tmk_core/common/matrix.h"
 612               		.file 5 "tmk_core/common/action.h"
 613               		.file 6 "tmk_core/common/host.h"
 614               		.file 7 "tmk_core/common/avr/xprintf.h"
 615               		.file 8 "tmk_core/common/debug.h"
 616               		.file 9 "quantum/keycode_config.h"
 617               		.file 10 "quantum/keymap.h"
 618               		.file 11 "tmk_core/common/timer.h"
 619               		.file 12 "tmk_core/common/command.h"
 620               		.file 13 "tmk_core/common/action_layer.h"
 621               		.file 14 "tmk_core/common/mousekey.h"
 622               		.file 15 "tmk_core/common/led.h"
 623               		.file 16 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:39     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:39     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:57     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:72     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:89     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:104    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:121    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:144    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:162    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:188    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:595    .progmem.data.__c.2866:0000000000000000 __c.2866
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:590    .progmem.data.__c.2868:0000000000000000 __c.2868
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:585    .progmem.data.__c.2870:0000000000000000 __c.2870
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:269    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:605    .bss.matrix_prev.2846:0000000000000000 matrix_prev.2846
/var/folders/3r/yll9b16919931vhbnddhf4vc0000gp/T//ccyT5rI2.s:600    .bss.led_status.2847:0000000000000000 led_status.2847

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
